{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\leds.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\leds.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      sysfs: [],\n      triggers: [],\n      devices: [],\n      modes: [\n        ['link', this.$t('Link On')],\n        ['tx', this.$t('Transmit')],\n        ['rx', this.$t('Receive')]\n      ]\n    }\n  },\n  methods: {\n    listLEDs() {\n      return this.$ubus.call('oui.system', 'led_list');\n    }\n  },\n  created() {\n    this.listLEDs().then(r => {\n      if (r.leds.length === 0)\n        return;\n\n      r.leds.forEach(led => {\n        this.sysfs.push(led.name);\n      });\n\n      r.leds[0].triggers.forEach(trigger => {\n        this.triggers.push(trigger);\n      });\n    });\n\n    this.$network.load().then(() => {\n      this.devices = this.$network.getDevices().map(dev => dev.name).filter(name => name !== 'lo');\n    });\n  }\n}\n",{"version":3,"sources":["leds.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"leds.vue","sourceRoot":"src/views/system","sourcesContent":["<template>\n   <uci-form config=\"system\" v-if=\"sysfs.length > 0\">\n    <uci-section type=\"led\" addable :teasers=\"['name', 'sysfs', 'default', 'trigger']\">\n      <uci-option-input :label=\"$t('Name')\" name=\"name\" required></uci-option-input>\n      <uci-option-list :label=\"$t('Led Name')\" name=\"sysfs\" :options=\"sysfs\" required :initial=\"sysfs[0]\"></uci-option-list>\n      <uci-option-switch :label=\"$t('Default state')\" name=\"default\"></uci-option-switch>\n      <uci-option-list :label=\"$t('Trigger')\" name=\"trigger\" :options=\"triggers\" initial=\"none\" required></uci-option-list>\n      <uci-option-input :label=\"$t('On-State Delay')\" name=\"delayon\" required depend=\"trigger == 'timer'\" :description=\"$t('Time in milliseconds the LED stays on')\"></uci-option-input>\n      <uci-option-input :label=\"$t('Off-State Delay')\" name=\"delayoff\" required depend=\"trigger == 'timer'\" :description=\"$t('Time in milliseconds the LED stays off')\"></uci-option-input>\n      <uci-option-list :label=\"$t('Device')\" name=\"dev\" :options=\"devices\" depend=\"trigger == 'netdev'\" allow-create></uci-option-list>\n      <uci-option-list :label=\"$t('Trigger Mode')\" name=\"mode\" :options=\"modes\" multiple depend=\"trigger == 'netdev'\"></uci-option-list>\n    </uci-section>\n  </uci-form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sysfs: [],\n      triggers: [],\n      devices: [],\n      modes: [\n        ['link', this.$t('Link On')],\n        ['tx', this.$t('Transmit')],\n        ['rx', this.$t('Receive')]\n      ]\n    }\n  },\n  methods: {\n    listLEDs() {\n      return this.$ubus.call('oui.system', 'led_list');\n    }\n  },\n  created() {\n    this.listLEDs().then(r => {\n      if (r.leds.length === 0)\n        return;\n\n      r.leds.forEach(led => {\n        this.sysfs.push(led.name);\n      });\n\n      r.leds[0].triggers.forEach(trigger => {\n        this.triggers.push(trigger);\n      });\n    });\n\n    this.$network.load().then(() => {\n      this.devices = this.$network.getDevices().map(dev => dev.name).filter(name => name !== 'lo');\n    });\n  }\n}\n</script>\n"]}]}