{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\network\\firewall\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\network\\firewall\\index.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Zone from './zone'\nimport Dnat from './dnat'\nimport Rules from './rules'\n\nexport default {\n  data() {\n    return {\n      protos: [\n        ['tcp udp', 'TCP+UDP'],\n        ['tcp', 'TCP'],\n        ['udp', 'UDP'],\n        ['icmp', 'ICMP']\n      ],\n      targets: [\n        ['REJECT', this.$t('reject')],\n        ['DROP', this.$t('drop')],\n        ['ACCEPT', this.$t('accept')]\n      ],\n      zones: []\n    }\n  },\n  components: {\n    Zone,\n    Dnat,\n    Rules\n  },\n  methods: {\n    load() {\n      this.$firewall.load(true);\n      this.zones = this.$firewall.zones.map(z => z.name());\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/network/firewall","sourcesContent":["<template>\n  <uci-form config=\"firewall\" ref=\"form\" tabbed :after-loaded=\"load\">\n    <uci-section type=\"defaults\" :title=\"$t('General Settings')\">\n      <uci-option-switch :label=\"$t('Enable SYN-flood protection')\" name=\"syn_flood\"></uci-option-switch>\n      <uci-option-switch :label=\"$t('Drop invalid packets')\" name=\"drop_invalid\"></uci-option-switch>\n      <uci-option-list :label=\"$t('Input')\" name=\"input\" :options=\"targets\" required></uci-option-list>\n      <uci-option-list :label=\"$t('Output')\" name=\"output\" :options=\"targets\" required></uci-option-list>\n      <uci-option-list :label=\"$t('Forward')\" name=\"forward\" :options=\"targets\" required></uci-option-list>\n    </uci-section>\n    <zone :zones=\"zones\" :targets=\"targets\"></zone>\n    <dnat :zones=\"zones\" :protos=\"protos\"></dnat>\n    <rules :zones=\"zones\" :protos=\"protos\"></rules>\n  </uci-form>\n</template>\n\n<script>\nimport Zone from './zone'\nimport Dnat from './dnat'\nimport Rules from './rules'\n\nexport default {\n  data() {\n    return {\n      protos: [\n        ['tcp udp', 'TCP+UDP'],\n        ['tcp', 'TCP'],\n        ['udp', 'UDP'],\n        ['icmp', 'ICMP']\n      ],\n      targets: [\n        ['REJECT', this.$t('reject')],\n        ['DROP', this.$t('drop')],\n        ['ACCEPT', this.$t('accept')]\n      ],\n      zones: []\n    }\n  },\n  components: {\n    Zone,\n    Dnat,\n    Rules\n  },\n  methods: {\n    load() {\n      this.$firewall.load(true);\n      this.zones = this.$firewall.zones.map(z => z.name());\n    }\n  }\n}\n</script>\n"]}]}