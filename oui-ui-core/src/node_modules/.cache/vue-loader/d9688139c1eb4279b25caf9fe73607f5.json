{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\upgrade.vue?vue&type=template&id=c20f7e54&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\upgrade.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-card\",\n        {\n          staticStyle: { \"margin-bottom\": \"15px\" },\n          attrs: { header: _vm.$t(\"Backup / Restore\") }\n        },\n        [\n          _c(\n            \"form\",\n            {\n              ref: \"backup\",\n              attrs: { method: \"POST\", action: \"/cgi-bin/cgi-backup\" }\n            },\n            [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: false,\n                    expression: \"false\"\n                  }\n                ],\n                attrs: { type: \"text\", name: \"sessionid\" },\n                domProps: { value: _vm.sid }\n              })\n            ]\n          ),\n          _c(\"p\", [_vm._v(_vm._s(_vm.$t(\"Backup-Restore-desc\")))]),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"primary\", size: \"small\" },\n              on: { click: _vm.generateArchive }\n            },\n            [_vm._v(_vm._s(_vm.$t(\"Generate archive\")))]\n          ),\n          _c(\n            \"el-button\",\n            {\n              attrs: { type: \"danger\", size: \"small\" },\n              on: { click: _vm.performReset }\n            },\n            [_vm._v(_vm._s(_vm.$t(\"Perform reset\")))]\n          ),\n          _c(\"p\", [\n            _vm._v(\n              _vm._s(\n                _vm.$t(\n                  \"To restore configuration files, you can upload a previously generated backup archive here.\"\n                )\n              )\n            )\n          ]),\n          _c(\n            \"el-upload\",\n            {\n              ref: \"archive\",\n              staticStyle: { width: \"600px\" },\n              attrs: {\n                action: \"/cgi-bin/cgi-upload\",\n                \"on-success\": _vm.onUploadArchiveSuccess,\n                \"file-list\": _vm.fileListArchive,\n                \"auto-upload\": false,\n                limit: 1,\n                data: { filename: \"/tmp/backup.tar.gz\", sessionid: _vm.sid }\n              }\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { slot: \"trigger\", size: \"small\", type: \"primary\" },\n                  slot: \"trigger\"\n                },\n                [_vm._v(_vm._s(_vm.$t(\"Select File\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\" },\n                  attrs: { size: \"small\", type: \"success\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.uploadFile(\"archive\")\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"Upload archive...\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-card\",\n        { attrs: { header: _vm.$t(\"Flash new firmware image\") } },\n        [\n          _c(\"p\", [_vm._v(_vm._s(_vm.$t(\"Upgrade-Firmware-desc\")))]),\n          _c(\n            \"el-upload\",\n            {\n              ref: \"firmware\",\n              staticStyle: { width: \"600px\" },\n              attrs: {\n                action: \"/cgi-bin/cgi-upload\",\n                \"on-success\": _vm.onUploadFirmwareSuccess,\n                \"file-list\": _vm.fileListFirmware,\n                \"auto-upload\": false,\n                limit: 1,\n                data: { filename: \"/tmp/firmware.bin\", sessionid: _vm.sid }\n              }\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { slot: \"trigger\", size: \"small\", type: \"primary\" },\n                  slot: \"trigger\"\n                },\n                [_vm._v(_vm._s(_vm.$t(\"Select File\")))]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  staticStyle: { \"margin-left\": \"10px\" },\n                  attrs: { size: \"small\", type: \"success\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.uploadFile(\"firmware\")\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(_vm.$t(\"Upload Firmware...\")))]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}