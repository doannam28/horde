{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\filebrowser.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\filebrowser.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.oui-filebrowser {\n  li:hover {\n    background-color: #CCE8FF80;\n  }\n\n  .selected {\n    background-color: #CCE8FF;\n  }\n}\n",{"version":3,"sources":["filebrowser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoHA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"filebrowser.vue","sourceRoot":"src/components/uci-form/src","sourcesContent":["<template>\n  <div>\n    <el-row>\n      <el-col :span=\"18\">{{ location }}</el-col>\n      <el-col :span=\"6\">\n        <el-dropdown size=\"small\" @command=\"showInput\">\n          <el-button type=\"primary\" size=\"small\">{{ ('New') }}<i class=\"el-icon-arrow-down el-icon--right\"></i></el-button>\n          <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"newfile\"><img style=\"vertical-align: text-bottom; margin-right: 2px\" src=\"/icons/file.png\" />{{ ('File') }}</el-dropdown-item>\n              <el-dropdown-item command=\"newfolder\"><img style=\"vertical-align: text-bottom; margin-right: 2px\" src=\"/icons/folder.png\" />{{ ('Folder') }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </el-col>\n    </el-row>\n    <ul style=\"padding-left: 0; list-style-type: none\" class=\"oui-filebrowser\">\n      <li @click=\"readdir('..')\" style=\"cursor: pointer\">\n        <img style=\"vertical-align: bottom; margin-right: 2px\" src=\"/icons/parent-folder.png\" />\n        <span>..</span>\n      </li>\n      <li v-for=\"f in files\" :key=\"f.name\" @click=\"readdir(f)\" style=\"cursor: pointer\" :class=\"{selected: selected === f.path}\">\n        <img style=\"vertical-align: bottom; margin-right: 2px\" :src=\"f.dir ? '/icons/folder.png' : '/icons/file.png'\" />\n        <span>{{ f.name }}</span>\n      </li>\n      <li v-if=\"newType\">\n        <img style=\"vertical-align: bottom; margin-right: 2px\" :src=\"(newType === 'file') ? '/icons/file.png' : '/icons/folder.png'\" />\n        <input ref=\"input\" v-model=\"newFileName\" @keyup.enter=\"newFile\" @blur=\"newFile\" />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      location: '/',\n      selected: '',\n      files: [],\n      newType: '',\n      newFileName: ''\n    }\n  },\n  methods: {\n    readdir(file) {\n      if (file === '..') {\n        if (this.location === '/')\n          return;\n        let paths = this.location.spli('/');\n        this.location = paths.slice(0, paths.length - 2).join('/') + '/';\n      } else {\n        if (!file.dir) {\n          this.selected = file.path;\n          this.$emit('selected', this.selected);\n          return;\n        }\n        this.location = file.path + '/';\n      }\n\n      this.$ubus.call('oui.system', 'read_dir', {path: this.location}).then(r => {\n        this.files = r.files;\n      });\n    },\n    showInput(cmd) {\n      if (cmd === 'newfile') {\n        this.newType = 'file';\n      } else {\n        this.newType = 'folder';\n      }\n\n      this.$nextTick(() => {\n        this.$refs['input'].focus();\n      });\n    },\n    newFile() {\n      const name = this.newFileName;\n      const isDir = this.newType === 'folder';\n\n      this.newFileName = '';\n      this.newType = '';\n\n      if (name) {\n        for (let file of this.files) {\n          if (file.name === name) {\n            this.$message.warning(('Already exists'));\n            return;\n          }\n        }\n\n        const path = this.location + name;\n\n        this.$ubus.call('oui.system', 'new_file', {path: path, dir: isDir}).then(r => {\n          if (r.r === 0) {\n            this.files.push({\n              name: name,\n              dir: isDir,\n              path: path\n            });\n\n            if (!isDir) {\n              this.selected = path;\n              this.$emit('selected', this.selected);\n            }\n          }\n        });\n      }\n    }\n  },\n  created() {\n    this.$ubus.call('oui.system', 'read_dir').then(r => {\n      this.files = r.files;\n    });\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.oui-filebrowser {\n  li:hover {\n    background-color: #CCE8FF80;\n  }\n\n  .selected {\n    background-color: #CCE8FF;\n  }\n}\n</style>\n"]}]}