{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\layout\\src\\header.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\layout\\src\\header.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Header',\n  data() {\n    return {\n      username: '',\n      isfullScreen: false,\n      breadcrumbs: []\n    }\n  },\n  computed: {\n    lang() {\n      return this.$store.state.lang;\n    }\n  },\n  methods: {\n    fullScreen() {\n      if (this.isfullScreen) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen()\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen()\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen()\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen()\n        }\n      } else {\n        const docElm = document.documentElement\n        if (docElm.requestFullscreen) {\n          docElm.requestFullscreen()\n        } else if (docElm.mozRequestFullScreen) {\n          docElm.mozRequestFullScreen()\n        } else if (docElm.webkitRequestFullScreen) {\n          docElm.webkitRequestFullScreen()\n        } else if (docElm.msRequestFullscreen) {\n          docElm.msRequestFullscreen()\n        }\n      }\n\n      this.isfullScreen = !this.isfullScreen;\n    },\n    getBreadCrumbList(route) {\n      const homeRoute = this.$router.options.routes[1].children[0];\n      const homeItem = {title: homeRoute.meta.title};\n      const matched = route.matched;\n\n      if (matched.some(item => item.path === '/home'))\n        return [homeItem];\n\n      homeItem.to = '/home';\n\n      const list = [homeItem, matched[0].meta];\n\n      if (!matched[0].redirect)\n        list.push(matched[1].meta);\n\n      return list;\n    },\n    onLangCommand(cmd) {\n      this.$ubus.call('oui.ui', 'lang', {lang: cmd}).then(({lang}) => {\n        this.$store.commit('setLang', lang);\n        if (lang === 'auto')\n          lang = navigator.language;\n        this.$i18n.locale = lang;\n      });\n    },\n    onUserCommand(cmd) {\n      if (cmd === 'logout') {\n        this.$router.push('/login');\n      } else if (cmd === 'reboot') {\n        this.$confirm(this.$t('Really reboot now?'), this.$t('Reboot')).then(() => {\n          this.$system.reboot().then(() => {\n            this.$reconnect('Rebooting...');\n          });\n        });\n      }\n    }\n  },\n  watch: {\n    '$route'(newRoute) {\n      this.breadcrumbs = this.getBreadCrumbList(newRoute);\n    }\n  },\n  created() {\n    this.breadcrumbs = this.getBreadCrumbList(this.$route);\n\n    this.$session.get(r => {\n      this.username = r.username;\n    });\n  }\n}\n",{"version":3,"sources":["header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"header.vue","sourceRoot":"src/components/layout/src","sourcesContent":["<template>\n  <div>\n    <el-header class=\"header\" height=\"40px\">\n      <el-breadcrumb separator=\"/\" class=\"crumbs\">\n        <el-breadcrumb-item v-for=\"(item, i) in breadcrumbs\" :key=\"i\" :to=\"item.to\">{{ $t(item.title) }}</el-breadcrumb-item>\n      </el-breadcrumb>\n      <div class=\"header-right\">\n        <el-tooltip effect=\"dark\" :content=\"isfullScreen ? $t('Exit Full Screen') : $t('Full Screen')\" placement=\"bottom\">\n          <i class=\"iconfont iconfull\" @click=\"fullScreen\"></i>\n        </el-tooltip>\n        <el-dropdown @command=\"onLangCommand\">\n          <span class=\"arrow-down\">\n            {{ $t('Language') }}<i class=\"el-icon-arrow-down\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"en\" :icon=\"(lang === 'en') ? 'el-icon-arrow-right' : ''\">English</el-dropdown-item>\n            <el-dropdown-item command=\"zh-CN\" :icon=\"(lang === 'zh-CN') ? 'el-icon-arrow-right' : ''\">中文</el-dropdown-item>\n            <el-dropdown-item command=\"auto\" :icon=\"(lang === 'auto') ? 'el-icon-arrow-right' : ''\">{{ $t('Automatic') }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n        <el-dropdown @command=\"onUserCommand\">\n          <span class=\"arrow-down\">\n            {{ username }}<i class=\"el-icon-arrow-down\"></i>\n          </span>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"logout\">{{ $t('Logout') }}</el-dropdown-item>\n            <el-dropdown-item command=\"reboot\">{{ $t('Reboot') }}</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </el-header>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Header',\n  data() {\n    return {\n      username: '',\n      isfullScreen: false,\n      breadcrumbs: []\n    }\n  },\n  computed: {\n    lang() {\n      return this.$store.state.lang;\n    }\n  },\n  methods: {\n    fullScreen() {\n      if (this.isfullScreen) {\n        if (document.exitFullscreen) {\n          document.exitFullscreen()\n        } else if (document.mozCancelFullScreen) {\n          document.mozCancelFullScreen()\n        } else if (document.webkitCancelFullScreen) {\n          document.webkitCancelFullScreen()\n        } else if (document.msExitFullscreen) {\n          document.msExitFullscreen()\n        }\n      } else {\n        const docElm = document.documentElement\n        if (docElm.requestFullscreen) {\n          docElm.requestFullscreen()\n        } else if (docElm.mozRequestFullScreen) {\n          docElm.mozRequestFullScreen()\n        } else if (docElm.webkitRequestFullScreen) {\n          docElm.webkitRequestFullScreen()\n        } else if (docElm.msRequestFullscreen) {\n          docElm.msRequestFullscreen()\n        }\n      }\n\n      this.isfullScreen = !this.isfullScreen;\n    },\n    getBreadCrumbList(route) {\n      const homeRoute = this.$router.options.routes[1].children[0];\n      const homeItem = {title: homeRoute.meta.title};\n      const matched = route.matched;\n\n      if (matched.some(item => item.path === '/home'))\n        return [homeItem];\n\n      homeItem.to = '/home';\n\n      const list = [homeItem, matched[0].meta];\n\n      if (!matched[0].redirect)\n        list.push(matched[1].meta);\n\n      return list;\n    },\n    onLangCommand(cmd) {\n      this.$ubus.call('oui.ui', 'lang', {lang: cmd}).then(({lang}) => {\n        this.$store.commit('setLang', lang);\n        if (lang === 'auto')\n          lang = navigator.language;\n        this.$i18n.locale = lang;\n      });\n    },\n    onUserCommand(cmd) {\n      if (cmd === 'logout') {\n        this.$router.push('/login');\n      } else if (cmd === 'reboot') {\n        this.$confirm(this.$t('Really reboot now?'), this.$t('Reboot')).then(() => {\n          this.$system.reboot().then(() => {\n            this.$reconnect('Rebooting...');\n          });\n        });\n      }\n    }\n  },\n  watch: {\n    '$route'(newRoute) {\n      this.breadcrumbs = this.getBreadCrumbList(newRoute);\n    }\n  },\n  created() {\n    this.breadcrumbs = this.getBreadCrumbList(this.$route);\n\n    this.$session.get(r => {\n      this.username = r.username;\n    });\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .el-breadcrumb {\n    font-size: 24px;\n  }\n\n  .header-right {\n    display: flex;\n\n    .iconfull {\n      font-size: 24px;\n      cursor: pointer;\n      margin-top: 4px;\n    }\n\n    .arrow-down {\n      cursor: pointer;\n      font-size: 24px;\n    }\n\n    > * {\n      margin-right: 20px;\n    }\n  }\n}\n</style>\n"]}]}