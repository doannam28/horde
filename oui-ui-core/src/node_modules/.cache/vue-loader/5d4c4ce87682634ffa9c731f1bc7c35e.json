{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\home.vue?vue&type=template&id=7eb2bc79&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\home.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"el-row\",\n        {\n          staticClass: \"oui-home-status-img\",\n          attrs: { type: \"flex\", justify: \"center\", align: \"middle\" }\n        },\n        [\n          _c(\"img\", {\n            attrs: { src: \"/icons/devices.png\" },\n            on: {\n              click: function($event) {\n                _vm.tab = \"devices\"\n              }\n            }\n          }),\n          _c(\"oui-line\", { attrs: { length: _vm.statusLineLength } }),\n          _c(\"img\", {\n            attrs: { src: \"/icons/router.png\" },\n            on: {\n              click: function($event) {\n                _vm.tab = \"router\"\n              }\n            }\n          }),\n          _c(\"oui-line\", {\n            attrs: { length: _vm.statusLineLength, disconnect: !_vm.wanIsUp }\n          }),\n          _c(\"img\", {\n            attrs: { src: \"/icons/internet.png\" },\n            on: {\n              click: function($event) {\n                _vm.tab = \"internet\"\n              }\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"el-tabs\",\n        {\n          attrs: { stretch: \"\" },\n          model: {\n            value: _vm.tab,\n            callback: function($$v) {\n              _vm.tab = $$v\n            },\n            expression: \"tab\"\n          }\n        },\n        [\n          _c(\n            \"el-tab-pane\",\n            { attrs: { name: \"devices\" } },\n            [\n              _c(\"span\", { attrs: { slot: \"label\" }, slot: \"label\" }, [\n                _vm._v(\n                  _vm._s(\n                    _vm.$t(\"Terminal devices\") + \"(\" + _vm.devices.length + \")\"\n                  )\n                )\n              ]),\n              _c(\n                \"el-card\",\n                {\n                  staticStyle: { \"margin-bottom\": \"15px\" },\n                  attrs: { header: _vm.$t(\"Online devices\") }\n                },\n                [\n                  _c(\n                    \"el-table\",\n                    { attrs: { data: _vm.devices } },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"Hostname\"), prop: \"hostname\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"IPv4-Address\"), prop: \"ipaddr\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"MAC-Address\"), prop: \"macaddr\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"RX Rate\"), prop: \"rxrate\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"TX Rate\"), prop: \"txrate\" }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-card\",\n                {\n                  staticStyle: { \"margin-bottom\": \"15px\" },\n                  attrs: { header: _vm.$t(\"Active DHCP Leases\") }\n                },\n                [\n                  _c(\n                    \"el-table\",\n                    { attrs: { data: _vm.leases } },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"Hostname\"), prop: \"hostname\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"IPv4-Address\"), prop: \"ipaddr\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"MAC-Address\"), prop: \"macaddr\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          label: _vm.$t(\"Leasetime remaining\"),\n                          formatter: function(row) {\n                            return row.expires <= 0\n                              ? _vm.$t(\"expired\")\n                              : \"%t\".format(row.expires)\n                          }\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-card\",\n                {\n                  staticStyle: { \"margin-bottom\": \"15px\" },\n                  attrs: { header: _vm.$t(\"Active DHCPv6 Leases\") }\n                },\n                [\n                  _c(\n                    \"el-table\",\n                    { attrs: { data: _vm.leases6 } },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"Host\"), prop: \"name\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          label: _vm.$t(\"IPv6-Address\"),\n                          prop: \"ip6addr\"\n                        }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: \"DUID\", prop: \"duid\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          label: _vm.$t(\"Leasetime remaining\"),\n                          formatter: function(row) {\n                            return row.expires <= 0\n                              ? _vm.$t(\"expired\")\n                              : \"%t\".format(row.expires)\n                          }\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"el-card\",\n                { attrs: { header: _vm.$t(\"Associated Stations\") } },\n                [\n                  _c(\n                    \"el-table\",\n                    { attrs: { data: _vm.assoclist } },\n                    [\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"MAC-Address\"), prop: \"mac\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: { label: _vm.$t(\"Host\"), prop: \"host\" }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          label: _vm.$t(\"Signal\") + \" / \" + _vm.$t(\"Noise\")\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"default\",\n                            fn: function(ref) {\n                              var row = ref.row\n                              return [\n                                _c(\"img\", {\n                                  attrs: { src: _vm.wifiSignalIcon(row) }\n                                }),\n                                _c(\"span\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      \" \" +\n                                        row.signal +\n                                        \"/\" +\n                                        row.noise +\n                                        \" dBm\"\n                                    )\n                                  )\n                                ])\n                              ]\n                            }\n                          }\n                        ])\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          label: _vm.$t(\"RX Rate\"),\n                          formatter: _vm.formatWifiRxRate\n                        }\n                      }),\n                      _c(\"el-table-column\", {\n                        attrs: {\n                          label: _vm.$t(\"TX Rate\"),\n                          formatter: _vm.formatWifiTxRate\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-tab-pane\",\n            { attrs: { name: \"router\" } },\n            [\n              _c(\"span\", { attrs: { slot: \"label\" }, slot: \"label\" }, [\n                _vm._v(_vm._s(_vm.$t(\"System\")))\n              ]),\n              _c(\n                \"el-row\",\n                {\n                  staticStyle: { \"margin-bottom\": \"15px\" },\n                  attrs: { gutter: 20 }\n                },\n                [\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\"card-list\", {\n                        attrs: {\n                          title: _vm.$t(\"System information\"),\n                          list: _vm.sysinfo\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"el-col\",\n                    { attrs: { span: 12 } },\n                    [\n                      _c(\n                        \"el-card\",\n                        { attrs: { header: _vm.$t(\"Resource usage\") } },\n                        [\n                          _c(\"e-charts\", {\n                            staticStyle: { width: \"100%\" },\n                            attrs: { options: _vm.resourceChart }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"el-tab-pane\",\n            { attrs: { name: \"internet\" } },\n            [\n              _c(\"span\", { attrs: { slot: \"label\" }, slot: \"label\" }, [\n                _vm._v(\"WAN\")\n              ]),\n              _c(\n                \"el-row\",\n                { attrs: { type: \"flex\", justify: \"center\" } },\n                [\n                  _c(\"CardList\", {\n                    staticStyle: { width: \"600px\" },\n                    attrs: { title: _vm.$t(\"Network\"), list: _vm.waninfo }\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}