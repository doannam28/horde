{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\status\\processes.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\status\\processes.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  data() {\n    return {\n      data: []\n    }\n  },\n  methods: {\n    kill(pid, signum) {\n      this.$ubus.call('system', 'signal', {pid, signum}).then(() => {\n        this.$message.success(`Send signal ${signum} to ${pid} successfully.`);\n      });\n    }\n  },\n  created() {\n    this.$ubus.call('oui.system', 'process_list').then(r => {\n      this.data = r.processes;\n    });\n  }\n}\n",{"version":3,"sources":["processes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"processes.vue","sourceRoot":"src/views/status","sourcesContent":["<template>\n  <el-table :data=\"data\" :default-sort=\"{prop: 'pid', order: 'ascending'}\">\n    <el-table-column prop=\"pid\" label=\"PID\" width=\"100\"></el-table-column>\n    <el-table-column prop=\"user\" :label=\"$t('Owner')\" width=\"100\"></el-table-column>\n    <el-table-column prop=\"command\" :label=\"$t('Command')\" show-overflow-tooltip></el-table-column>\n    <el-table-column prop=\"cpu_percent\" :label=\"$t('CPU usage')\" width=\"100\" :formatter=\"row => row.cpu_percent + '%'\"></el-table-column>\n    <el-table-column prop=\"vsize_percent\" :label=\"$t('Memory usage')\" width=\"100\" :formatter=\"row => row.vsize_percent + '%'\"></el-table-column>\n    <el-table-column width=\"320\" :label=\"$t('Signal')\">\n      <template v-slot=\"{ row }\">\n        <el-button type=\"primary\" size=\"mini\" @click=\"kill(row.pid, 1)\">{{ $t('Hang Up') }}</el-button>\n        <el-button type=\"warning\" size=\"mini\" @click=\"kill(row.pid, 15)\">{{ $t('Terminate') }}</el-button>\n        <el-button type=\"danger\" size=\"mini\" @click=\"kill(row.pid, 9)\">{{ $t('Kill immediately') }}</el-button>\n      </template>\n    </el-table-column>\n  </el-table>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      data: []\n    }\n  },\n  methods: {\n    kill(pid, signum) {\n      this.$ubus.call('system', 'signal', {pid, signum}).then(() => {\n        this.$message.success(`Send signal ${signum} to ${pid} successfully.`);\n      });\n    }\n  },\n  created() {\n    this.$ubus.call('oui.system', 'process_list').then(r => {\n      this.data = r.processes;\n    });\n  }\n}\n</script>\n"]}]}