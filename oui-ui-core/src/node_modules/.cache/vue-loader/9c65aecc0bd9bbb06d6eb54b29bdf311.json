{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-section-add.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-section-add.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  name: 'UciSectionAdd',\n  props: {\n    sestion: Object\n  },\n  methods: {\n    add(name) {\n      let sid;\n\n      if (this.sestion.add) {\n        sid = this.sestion.add(this.sestion);\n\n        if (window.oui.isPromise(sid)) {\n          sid.then(sid => {\n            if (sid)\n              this.sestion.loadAdded(sid);\n          }, () => {\n            /* ignore promise rejection */\n          });\n          return;\n        }\n      } else {\n        sid = this.$uci.add(this.sestion.config, this.sestion.type, name);\n      }\n\n      if (sid) {\n        if (this.sestion.afterAdd)\n          this.sestion.afterAdd(sid, this.sestion);\n        this.sestion.loadAdded(sid);\n      }\n    },\n    handleAdd() {\n      if (this.sestion.anonymous) {\n        this.add();\n        return;\n      }\n\n      this.$prompt(this.$t('Please input a name'), this.$t('Add'), {\n        inputValidator: value => {\n          if (!value || value.match(/^[a-zA-Z0-9_]+$/) === null)\n            return this.$t('Must be a valid UCI identifier');\n\n          for (let i = 0; i < this.sestion.sids.length; i++)\n            if (this.sestion.sids[i] === value)\n              return this.$t('Name already used');\n\n          return true;\n        }\n      }).then(r => {\n        this.add(r.value);\n      });\n    }\n  }\n}\n",{"version":3,"sources":["uci-section-add.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"uci-section-add.vue","sourceRoot":"src/components/uci-form/src","sourcesContent":["<template>\n  <el-button style=\"margin-top: 10px\" type=\"primary\" size=\"mini\" @click=\"handleAdd\">{{ $t('Add') }}</el-button>\n</template>\n\n<script>\nexport default {\n  name: 'UciSectionAdd',\n  props: {\n    sestion: Object\n  },\n  methods: {\n    add(name) {\n      let sid;\n\n      if (this.sestion.add) {\n        sid = this.sestion.add(this.sestion);\n\n        if (window.oui.isPromise(sid)) {\n          sid.then(sid => {\n            if (sid)\n              this.sestion.loadAdded(sid);\n          }, () => {\n            /* ignore promise rejection */\n          });\n          return;\n        }\n      } else {\n        sid = this.$uci.add(this.sestion.config, this.sestion.type, name);\n      }\n\n      if (sid) {\n        if (this.sestion.afterAdd)\n          this.sestion.afterAdd(sid, this.sestion);\n        this.sestion.loadAdded(sid);\n      }\n    },\n    handleAdd() {\n      if (this.sestion.anonymous) {\n        this.add();\n        return;\n      }\n\n      this.$prompt(this.$t('Please input a name'), this.$t('Add'), {\n        inputValidator: value => {\n          if (!value || value.match(/^[a-zA-Z0-9_]+$/) === null)\n            return this.$t('Must be a valid UCI identifier');\n\n          for (let i = 0; i < this.sestion.sids.length; i++)\n            if (this.sestion.sids[i] === value)\n              return this.$t('Name already used');\n\n          return true;\n        }\n      }).then(r => {\n        this.add(r.value);\n      });\n    }\n  }\n}\n</script>\n"]}]}