{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\network\\dhcp.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\network\\dhcp.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      arp: {\n        macaddrs: [],\n        ipaddrs: []\n      }\n    }\n  },\n  methods: {\n    validateLeasetime(v) {\n      if (v === '')\n        return;\n\n      if (v === '1m')\n        return this.$t('minimum is 2 minutes (2m).');\n\n      if (/^\\d+h$|m$/.test(v))\n        return;\n\n      return this.$t('Invalid format. Correct format: \"12h\" or \"30m\"');\n    },\n    getARPTable() {\n      return this.$ubus.call('oui.network', 'arp_table');\n    },\n    onApplied() {\n      this.$system.initRestart('dnsmasq');\n    }\n  },\n  created() {\n    this.getARPTable().then(r => {\n      r.entries.forEach(arp => {\n        if (arp.macaddr === '00:00:00:00:00:00')\n          return;\n\n        this.arp.macaddrs.push(arp.macaddr);\n        this.arp.ipaddrs.push(arp.ipaddr);\n      });\n    });\n  }\n}\n",{"version":3,"sources":["dhcp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"dhcp.vue","sourceRoot":"src/views/network","sourcesContent":["<template>\n  <uci-form config=\"dhcp\" @applied=\"onApplied\">\n    <uci-section :title=\"$t('Server Settings')\" type=\"dnsmasq\">\n      <uci-tab :title=\"$t('General Settings')\" name=\"general\">\n        <uci-option-switch :label=\"$t('Domain required')\" name=\"domainneeded\" initial=\"1\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Authoritative')\" name=\"authoritative\" initial=\"1\"></uci-option-switch>\n        <uci-option-input :label=\"$t('Local server')\" name=\"local\" required></uci-option-input>\n        <uci-option-input :label=\"$t('Local domain')\" name=\"domain\" required></uci-option-input>\n        <uci-option-switch :label=\"$t('Log queries')\" name=\"logqueries\" initial=\"1\"></uci-option-switch>\n        <uci-option-dlist :label=\"$t('DNS forwardings')\" name=\"server\"></uci-option-dlist>\n        <uci-option-switch :label=\"$t('Rebind protection')\" name=\"rebind_protection\" initial=\"1\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Allow localhost')\" name=\"rebind_localhost\" depend=\"rebind_protection\"></uci-option-switch>\n        <uci-option-dlist :label=\"$t('Domain whitelist')\" name=\"rebind_domain\" depend=\"rebind_protection\" rules=\"host\"></uci-option-dlist>\n      </uci-tab>\n      <uci-tab :title=\"$t('Resolv and Hosts Files')\" name=\"files\">\n        <uci-option-switch :label=\"$t('Use /etc/ethers')\" name=\"readethers\"></uci-option-switch>\n        <uci-option-input :label=\"$t('Leasefile')\" name=\"leasefile\"></uci-option-input>\n        <uci-option-switch :label=\"$t('Ignore resolve file')\" name=\"noresolv\"></uci-option-switch>\n        <uci-option-input :label=\"$t('Resolve file')\" name=\"resolvfile\" depend=\"!noresolv\"></uci-option-input>\n        <uci-option-switch :label=\"$t('Ignore /etc/hosts')\" name=\"nohosts\"></uci-option-switch>\n        <uci-option-dlist :label=\"$t('Additional Hosts files')\" name=\"addnhosts\"></uci-option-dlist>\n      </uci-tab>\n      <uci-tab :title=\"$t('Advanced Settings')\" name=\"advanced\">\n        <uci-option-switch :label=\"$t('Suppress logging')\" name=\"quietdhcp\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Allocate IP sequentially')\" name=\"sequential_ip\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Filter private')\" name=\"boguspriv\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Filter useless')\" name=\"filterwin2k\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Localise queries')\" name=\"localise_queries\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Expand hosts')\" name=\"expandhosts\" initial=\"1\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('No negative cache')\" name=\"nonegcache\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('Strict order')\" name=\"strictorder\"></uci-option-switch>\n        <uci-option-dlist :label=\"$t('Bogus NX Domain Override')\" name=\"bogusnxdomain\"></uci-option-dlist>\n        <uci-option-input :label=\"$t('DNS server port')\" name=\"port\" placeholder=\"53\" rules=\"port\"></uci-option-input>\n        <uci-option-input :label=\"$t('DNS query port')\" name=\"queryport\" placeholder=\"any\" rules=\"port\"></uci-option-input>\n        <uci-option-input :label=\"$t('Max. DHCP leases')\" name=\"dhcpleasemax\" placeholder=\"unlimited\" rules=\"uinteger\"></uci-option-input>\n        <uci-option-input :label=\"$t('Max. EDNS0 packet size')\" name=\"ednspacket_max\" placeholder=\"1280\" rules=\"uinteger\"></uci-option-input>\n        <uci-option-input :label=\"$t('Max. concurrent queries')\" name=\"dnsforwardmax\" placeholder=\"150\" rules=\"uinteger\"></uci-option-input>\n      </uci-tab>\n    </uci-section>\n    <uci-section :title=\"$t('DHCP Server')\" type=\"dhcp\">\n      <uci-tab :title=\"$t('General Settings')\" name=\"general\">\n        <uci-option-dummy :label=\"$t('Interface')\" name=\"interface\"></uci-option-dummy>\n        <uci-option-switch :label=\"$t('Ignore interface')\" name=\"ignore\"></uci-option-switch>\n        <uci-option-input :label=\"$t('dhcp-Start')\" name=\"start\" placeholder=\"100\" rules=\"uinteger\"></uci-option-input>\n        <uci-option-input :label=\"$t('dhcp-Limit')\" name=\"limit\" placeholder=\"150\" rules=\"uinteger\"></uci-option-input>\n        <uci-option-input :label=\"$t('Leasetime')\" name=\"leasetime\" placeholder=\"12h\" :rules=\"validateLeasetime\"></uci-option-input>\n      </uci-tab>\n      <uci-tab :title=\"$t('Advanced Settings')\" name=\"advanced\">\n        <uci-option-switch :label=\"$t('Dynamic DHCP')\" name=\"dynamicdhcp\" initial=\"1\"></uci-option-switch>\n        <uci-option-switch :label=\"$t('dhcp-Force')\" name=\"force\"></uci-option-switch>\n        <uci-option-input :label=\"$t('IPv4-Netmask')\" name=\"netmask\" rules=\"ip4addr\"></uci-option-input>\n      </uci-tab>\n    </uci-section>\n    <uci-section :title=\"$t('Static Leases')\" type=\"host\" addable table>\n      <uci-option-input :label=\"$t('Hostname')\" name=\"name\" rules=\"hostname\"></uci-option-input>\n      <uci-option-list :label=\"$t('MAC-Address')\" name=\"mac\" required rules=\"macaddr\" :options=\"arp.macaddrs\" allow-create></uci-option-list>\n      <uci-option-list :label=\"$t('IPv4-Address')\" name=\"ip\" required rules=\"ip4addr\" :options=\"arp.ipaddrs\" allow-create></uci-option-list>\n    </uci-section>\n  </uci-form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      arp: {\n        macaddrs: [],\n        ipaddrs: []\n      }\n    }\n  },\n  methods: {\n    validateLeasetime(v) {\n      if (v === '')\n        return;\n\n      if (v === '1m')\n        return this.$t('minimum is 2 minutes (2m).');\n\n      if (/^\\d+h$|m$/.test(v))\n        return;\n\n      return this.$t('Invalid format. Correct format: \"12h\" or \"30m\"');\n    },\n    getARPTable() {\n      return this.$ubus.call('oui.network', 'arp_table');\n    },\n    onApplied() {\n      this.$system.initRestart('dnsmasq');\n    }\n  },\n  created() {\n    this.getARPTable().then(r => {\n      r.entries.forEach(arp => {\n        if (arp.macaddr === '00:00:00:00:00:00')\n          return;\n\n        this.arp.macaddrs.push(arp.macaddr);\n        this.arp.ipaddrs.push(arp.ipaddr);\n      });\n    });\n  }\n}\n</script>\n"]}]}