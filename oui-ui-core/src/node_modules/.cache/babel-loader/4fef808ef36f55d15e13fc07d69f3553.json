{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option-switch.js","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option-switch.js","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.number.constructor\";\nimport mixin from \"./uci-option\";\nexport default {\n  name: 'UciOptionSwitch',\n  mixins: [mixin],\n  props: {\n    /* If load from uci fails, the value of the property is used as the form value. */\n    initial: {\n      type: [String, Number, Boolean],\n      default: function _default() {\n        return undefined;\n      }\n    },\n    activeValue: {\n      type: [String, Number, Boolean],\n      default: function _default() {\n        return undefined;\n      }\n    },\n    inactiveValue: {\n      type: [String, Number, Boolean],\n      default: function _default() {\n        return undefined;\n      }\n    }\n  },\n  data: function data() {\n    return {\n      trueValues: ['1', 'yes', 'on', 'true', 'enabled', true]\n    };\n  },\n  methods: {\n    textValue: function textValue(sid) {\n      var v = this.formValue(sid);\n\n      if (typeof this.activeValue !== 'undefined') {\n        if (v === this.activeValue) return 'yes';else return 'no';\n      } else {\n        if (v) return 'yes';else return 'no';\n      }\n    },\n    convertFromUCI: function convertFromUCI(value) {\n      var inactiveValue = false;\n      if (typeof this.inactiveValue !== 'undefined') inactiveValue = this.inactiveValue;\n\n      if (typeof this.activeValue !== 'undefined') {\n        if (value !== this.activeValue) value = inactiveValue;\n      } else {\n        if (this.trueValues.indexOf(value) > -1) value = true;else value = inactiveValue;\n      }\n\n      return value;\n    },\n    dependExprValue: function dependExprValue(sid) {\n      var value = this.formValue(sid);\n      var r;\n      if (typeof this.activeValue !== 'undefined') r = value === this.activeValue;else r = !!value;\n      return r.toString();\n    },\n    view: function view(prop) {\n      var _this = this;\n\n      var h = this.$createElement;\n      return h(\"el-switch\", {\n        \"attrs\": {\n          \"active-value\": this.activeValue,\n          \"inactive-value\": this.inactiveValue\n        },\n        \"model\": {\n          value: _this.form[prop],\n          callback: function callback($$v) {\n            _this.$set(_this.form, prop, $$v);\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option-switch.js"],"names":["mixin","name","mixins","props","initial","type","String","Number","Boolean","default","undefined","activeValue","inactiveValue","data","trueValues","methods","textValue","sid","v","formValue","convertFromUCI","value","indexOf","dependExprValue","r","toString","view","prop","form"],"mappings":";;AAAA,OAAOA,KAAP;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,iBADO;AAEbC,EAAAA,MAAM,EAAE,CAACF,KAAD,CAFK;AAGbG,EAAAA,KAAK,EAAE;AACL;AACAC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CADC;AAEPC,MAAAA,OAAO,EAAE;AAAA,eAAMC,SAAN;AAAA;AAFF,KAFJ;AAMLC,IAAAA,WAAW,EAAE;AACXN,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CADK;AAEXC,MAAAA,OAAO,EAAE;AAAA,eAAMC,SAAN;AAAA;AAFE,KANR;AAULE,IAAAA,aAAa,EAAE;AACbP,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CADO;AAEbC,MAAAA,OAAO,EAAE;AAAA,eAAMC,SAAN;AAAA;AAFI;AAVV,GAHM;AAkBbG,EAAAA,IAlBa,kBAkBN;AACL,WAAO;AACLC,MAAAA,UAAU,EAAE,CAAC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,MAAnB,EAA2B,SAA3B,EAAsC,IAAtC;AADP,KAAP;AAGD,GAtBY;AAuBbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SADO,qBACGC,GADH,EACQ;AACb,UAAIC,CAAC,GAAG,KAAKC,SAAL,CAAeF,GAAf,CAAR;;AAEA,UAAI,OAAO,KAAKN,WAAZ,KAA6B,WAAjC,EAA8C;AAC5C,YAAIO,CAAC,KAAK,KAAKP,WAAf,EACE,OAAO,KAAP,CADF,KAGE,OAAO,IAAP;AACH,OALD,MAKO;AACL,YAAIO,CAAJ,EACE,OAAO,KAAP,CADF,KAGE,OAAO,IAAP;AACH;AACF,KAfM;AAgBPE,IAAAA,cAhBO,0BAgBQC,KAhBR,EAgBe;AACpB,UAAIT,aAAa,GAAG,KAApB;AAEA,UAAI,OAAO,KAAKA,aAAZ,KAA+B,WAAnC,EACEA,aAAa,GAAG,KAAKA,aAArB;;AAEF,UAAI,OAAO,KAAKD,WAAZ,KAA6B,WAAjC,EAA8C;AAC5C,YAAIU,KAAK,KAAK,KAAKV,WAAnB,EACEU,KAAK,GAAGT,aAAR;AACH,OAHD,MAGO;AACL,YAAI,KAAKE,UAAL,CAAgBQ,OAAhB,CAAwBD,KAAxB,IAAiC,CAAC,CAAtC,EACEA,KAAK,GAAG,IAAR,CADF,KAGEA,KAAK,GAAGT,aAAR;AACH;;AAED,aAAOS,KAAP;AACD,KAjCM;AAkCPE,IAAAA,eAlCO,2BAkCSN,GAlCT,EAkCc;AACnB,UAAII,KAAK,GAAG,KAAKF,SAAL,CAAeF,GAAf,CAAZ;AACA,UAAIO,CAAJ;AAEA,UAAI,OAAO,KAAKb,WAAZ,KAA6B,WAAjC,EACEa,CAAC,GAAGH,KAAK,KAAK,KAAKV,WAAnB,CADF,KAGEa,CAAC,GAAG,CAAC,CAACH,KAAN;AAEF,aAAOG,CAAC,CAACC,QAAF,EAAP;AACD,KA5CM;AA6CPC,IAAAA,IA7CO,gBA6CFC,IA7CE,EA6CI;AAAA;;AAAA;AACT;AAAA;AAAA,0BAAgC,KAAKhB,WAArC;AAAA,4BAAkE,KAAKC;AAAvE;AAAA;AAAA,iBAA+F,KAAI,CAACgB,IAAL,CAAUD,IAAV,CAA/F;AAAA;AAAA,uBAA+F,KAAI,CAACC,IAApG,EAAyGD,IAAzG;AAAA;AAAA;AAAA;AACD;AA/CM;AAvBI,CAAf","sourcesContent":["import mixin from './uci-option'\n\nexport default {\n  name: 'UciOptionSwitch',\n  mixins: [mixin],\n  props: {\n    /* If load from uci fails, the value of the property is used as the form value. */\n    initial: {\n      type: [String, Number, Boolean],\n      default: () => undefined\n    },\n    activeValue: {\n      type: [String, Number, Boolean],\n      default: () => undefined\n    },\n    inactiveValue: {\n      type: [String, Number, Boolean],\n      default: () => undefined\n    }\n  },\n  data() {\n    return {\n      trueValues: ['1', 'yes', 'on', 'true', 'enabled', true]\n    }\n  },\n  methods: {\n    textValue(sid) {\n      let v = this.formValue(sid);\n\n      if (typeof(this.activeValue) !== 'undefined') {\n        if (v === this.activeValue)\n          return 'yes';\n        else\n          return 'no';\n      } else {\n        if (v)\n          return 'yes';\n        else\n          return 'no';\n      }\n    },\n    convertFromUCI(value) {\n      let inactiveValue = false;\n\n      if (typeof(this.inactiveValue) !== 'undefined')\n        inactiveValue = this.inactiveValue;\n\n      if (typeof(this.activeValue) !== 'undefined') {\n        if (value !== this.activeValue)\n          value = inactiveValue;\n      } else {\n        if (this.trueValues.indexOf(value) > -1)\n          value = true;\n        else\n          value = inactiveValue;\n      }\n\n      return value;\n    },\n    dependExprValue(sid) {\n      let value = this.formValue(sid);\n      let r;\n\n      if (typeof(this.activeValue) !== 'undefined')\n        r = value === this.activeValue;\n      else\n        r = !!value;\n\n      return r.toString();\n    },\n    view(prop) {\n      return <el-switch active-value={this.activeValue} inactive-value={this.inactiveValue} v-model={this.form[prop]} />;\n    }\n  }\n}\n"]}]}