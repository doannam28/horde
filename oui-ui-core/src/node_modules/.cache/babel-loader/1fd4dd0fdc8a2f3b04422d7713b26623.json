{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\validator.js","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\validator.js","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"D:\\\\Project VMODEV\\\\Horde\\\\horde-oui\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport _toConsumableArray from \"D:\\\\Project VMODEV\\\\Horde\\\\horde-oui\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.match\";\nimport i18n from '@/i18n';\nvar validator = {};\n\nfunction parseIPv4(str) {\n  if (typeof str !== 'string' && !(str instanceof String) || !str.match(/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/)) return undefined;\n  var num = [];\n  var parts = str.split(/\\./);\n\n  for (var i = 0; i < parts.length; i++) {\n    var n = parseInt(parts[i]);\n    if (isNaN(n) || n > 255) return undefined;\n    num.push(n);\n  }\n\n  return num;\n}\n\nfunction parseIPv6(str) {\n  if (typeof str !== 'string' && !(str instanceof String) || !str.match(/^[a-fA-F0-9:]+(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})?$/)) return undefined;\n  var parts = str.split(/::/);\n  if (parts.length === 0 || parts.length > 2) return undefined;\n  var lnum = [];\n\n  if (parts[0].length > 0) {\n    var left = parts[0].split(/:/);\n\n    for (var i = 0; i < left.length; i++) {\n      var n = parseInt(left[i], 16);\n      if (isNaN(n)) return undefined;\n      lnum.push(n / 256 >> 0);\n      lnum.push(n % 256);\n    }\n  }\n\n  var rnum = [];\n\n  if (parts.length > 1 && parts[1].length > 0) {\n    var right = parts[1].split(/:/);\n\n    for (var _i = 0; _i < right.length; _i++) {\n      if (right[_i].indexOf('.') > 0) {\n        var addr = parseIPv4(right[_i]);\n        if (!addr) return undefined;\n        rnum.push.apply(rnum, addr);\n        continue;\n      }\n\n      var _n = parseInt(right[_i], 16);\n\n      if (isNaN(_n)) return undefined;\n      rnum.push(_n / 256 >> 0);\n      rnum.push(_n % 256);\n    }\n  }\n\n  if (rnum.length > 0 && lnum.length + rnum.length > 15) return undefined;\n  var num = [];\n  num.push.apply(num, lnum);\n\n  for (var _i2 = 0; _i2 < 16 - lnum.length - rnum.length; _i2++) {\n    num.push(0);\n  }\n\n  num.push.apply(num, rnum);\n  if (num.length > 16) return undefined;\n  return num;\n}\n\nfunction isNetmask(addr) {\n  if (!Array.isArray(addr)) return false;\n  var c;\n\n  for (c = 0; c < addr.length && addr[c] === 255; c++) {\n    ;\n  }\n\n  if (c === addr.length) return true;\n\n  if (addr[c] === 254 || addr[c] === 252 || addr[c] === 248 || addr[c] === 240 || addr[c] === 224 || addr[c] === 192 || addr[c] === 128 || addr[c] === 0) {\n    for (c++; c < addr.length && addr[c] === 0; c++) {\n      ;\n    }\n\n    if (c === addr.length) return true;\n  }\n\n  return false;\n}\n\nfunction performCallback(types, rule, value, cb, msg, arg) {\n  if (value === undefined || value === '' || window.oui.isEmptyArray(value)) {\n    cb();\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      if (value[i] === '') continue;\n\n      if (!types[rule.type].verify(value[i], arg)) {\n        cb(new Error(msg));\n        return;\n      }\n    }\n\n    cb();\n    return;\n  }\n\n  if (types[rule.type].verify(value, arg)) cb();else cb(new Error(msg));\n}\n\nvar types = {\n  url: {\n    validator: 'url',\n    message: function message() {\n      return i18n.t('Must be a valid url');\n    }\n  },\n  email: {\n    validator: 'email',\n    message: function message() {\n      return i18n.t('Must be a valid email');\n    }\n  },\n  number: {\n    verify: function verify(value) {\n      return !isNaN(value);\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number'));\n    }\n  },\n  integer: {\n    verify: function verify(value) {\n      return types['number'].verify(value) && parseInt(value).toString() === value;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a integer'));\n    }\n  },\n  uinteger: {\n    verify: function verify(value) {\n      return types['integer'].verify(value) && value >= 0;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a positive integer'));\n    }\n  },\n  min: {\n    verify: function verify(value, arg) {\n      return types['number'].verify(value) && value >= arg;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number greater or equal to', {\n        num: rule.arg\n      }), rule.arg);\n    }\n  },\n  max: {\n    verify: function verify(value, arg) {\n      return types['number'].verify(value) && value <= arg;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number lower or equal to', {\n        num: rule.arg\n      }), rule.arg);\n    }\n  },\n  range: {\n    verify: function verify(value, arg) {\n      return types['min'].verify(value, arg[0]) && types['max'].verify(value, arg[1]);\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number between', {\n        min: rule.arg[0],\n        max: rule.arg[1]\n      }), rule.arg);\n    }\n  },\n  hostname: {\n    verify: function verify(value) {\n      return value.length <= 253 && (value.match(/^[a-zA-Z0-9]+$/) !== null || value.match(/^[a-zA-Z0-9_][a-zA-Z0-9_\\-.]*[a-zA-Z0-9]$/) && value.match(/[^0-9.]/));\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid hostname'));\n    }\n  },\n  ip4addr: {\n    verify: function verify(value) {\n      return parseIPv4(value);\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv4 address'));\n    }\n  },\n  ip6addr: {\n    verify: function verify(value) {\n      return parseIPv6(value);\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv6 address'));\n    }\n  },\n  ipaddr: {\n    verify: function verify(value) {\n      return types['ip4addr'].verify(value) || types['ip6addr'].verify(value);\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IP address'));\n    }\n  },\n  netmask4: {\n    verify: function verify(value) {\n      return isNetmask(parseIPv4(value));\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv4 netmask'));\n    }\n  },\n  netmask6: {\n    verify: function verify(value) {\n      return isNetmask(parseIPv6(value));\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv6 netmask'));\n    }\n  },\n  host: {\n    verify: function verify(value) {\n      return types['hostname'].verify(value) || types['ipaddr'].verify(value);\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid hostname or IP address'));\n    }\n  },\n  port: {\n    verify: function verify(value) {\n      return types['uinteger'].verify(value) && value <= 65535;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid port number'));\n    }\n  },\n  macaddr: {\n    verify: function verify(value) {\n      return value.match(/^([a-fA-F0-9]{2}:){5}[a-fA-F0-9]{2}$/) !== null;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid MAC address'));\n    }\n  },\n  uciname: {\n    verify: function verify(value) {\n      return value.match(/^[a-zA-Z0-9_]+$/) !== null;\n    },\n    validator: function validator(rule, value, cb) {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid UCI identifier'));\n    }\n  }\n};\n\nvalidator.compileString = function (rule, arg) {\n  if (Object.keys(types).indexOf(rule) < 0) return [];\n  var type = types[rule];\n  var r = {};\n\n  if (typeof type.validator === 'string') {\n    r.type = type.validator;\n    if (typeof type.message === 'string') r.message = type.message;else if (typeof type.message === 'function') r.message = type.message();\n  } else {\n    r.type = rule;\n    r.arg = arg;\n    r.validator = type.validator;\n  }\n\n  return [r];\n};\n\nvalidator.compileFunction = function (verify, vm) {\n  var r = {\n    validator: function validator(rule, value, callback) {\n      var err = verify(value, vm);\n      if (typeof err === 'string') callback(new Error(err));else callback();\n    }\n  };\n  return [r];\n};\n\nvalidator.compileObject = function (rule) {\n  var rs = [];\n\n  if (rule.type) {\n    var r = this.compileString(rule.type);\n    rs.push.apply(rs, _toConsumableArray(r));\n  }\n\n  if (typeof rule.min !== 'undefined' && typeof rule.max !== 'undefined') {\n    var _r = this.compileString('range', [rule.min, rule.max]);\n\n    rs.push.apply(rs, _toConsumableArray(_r));\n  } else {\n    if (typeof rule.min !== 'undefined') {\n      var _r2 = this.compileString('min', rule.min);\n\n      rs.push.apply(rs, _toConsumableArray(_r2));\n    }\n\n    if (typeof rule.max !== 'undefined') {\n      var _r3 = this.compileString('max', rule.max);\n\n      rs.push.apply(rs, _toConsumableArray(_r3));\n    }\n  }\n\n  return rs;\n};\n/* vm: uci-option instance */\n\n\nvalidator.compile = function (rule, vm) {\n  var type = _typeof(rule);\n\n  if (type === 'string') return this.compileString(rule);\n  if (type === 'function') return this.compileFunction(rule, vm);\n  if (type === 'object') return this.compileObject(rule);\n  return [];\n};\n\nexport default validator;",{"version":3,"sources":["D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\components\\uci-form\\src\\validator.js"],"names":["i18n","validator","parseIPv4","str","String","match","undefined","num","parts","split","i","length","n","parseInt","isNaN","push","parseIPv6","lnum","left","rnum","right","indexOf","addr","apply","isNetmask","Array","isArray","c","performCallback","types","rule","value","cb","msg","arg","window","oui","isEmptyArray","type","verify","Error","url","message","t","email","number","integer","toString","uinteger","min","max","range","hostname","ip4addr","ip6addr","ipaddr","netmask4","netmask6","host","port","macaddr","uciname","compileString","Object","keys","r","compileFunction","vm","callback","err","compileObject","rs","compile"],"mappings":"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","sourcesContent":["import i18n from '@/i18n'\n\nconst validator = {}\n\nfunction parseIPv4(str) {\n  if ((typeof(str) !== 'string' && !(str instanceof String)) ||\n    !str.match(/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/))\n    return undefined;\n\n  const num = [ ];\n  const parts = str.split(/\\./);\n\n  for (let i = 0; i < parts.length; i++) {\n    const n = parseInt(parts[i]);\n    if (isNaN(n) || n > 255)\n      return undefined;\n\n    num.push(n);\n  }\n\n  return num;\n}\n\nfunction parseIPv6(str) {\n  if ((typeof(str) !== 'string' && !(str instanceof String)) ||\n    !str.match(/^[a-fA-F0-9:]+(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})?$/))\n    return undefined;\n\n  const parts = str.split(/::/);\n  if (parts.length === 0 || parts.length > 2)\n    return undefined;\n\n  const lnum = [ ];\n  if (parts[0].length > 0) {\n    const left = parts[0].split(/:/);\n    for (let i = 0; i < left.length; i++) {\n      const n = parseInt(left[i], 16);\n      if (isNaN(n))\n        return undefined;\n\n      lnum.push((n / 256) >> 0);\n      lnum.push(n % 256);\n    }\n  }\n\n  const rnum = [ ];\n  if (parts.length > 1 && parts[1].length > 0) {\n    const right = parts[1].split(/:/);\n\n    for (let i = 0; i < right.length; i++) {\n      if (right[i].indexOf('.') > 0) {\n        const addr = parseIPv4(right[i]);\n        if (!addr)\n          return undefined;\n\n        rnum.push.apply(rnum, addr);\n        continue;\n      }\n\n      const n = parseInt(right[i], 16);\n      if (isNaN(n))\n        return undefined;\n\n      rnum.push((n / 256) >> 0);\n      rnum.push(n % 256);\n    }\n  }\n\n  if (rnum.length > 0 && (lnum.length + rnum.length) > 15)\n    return undefined;\n\n  const num = [ ];\n\n  num.push.apply(num, lnum);\n\n  for (let i = 0; i < (16 - lnum.length - rnum.length); i++)\n    num.push(0);\n\n  num.push.apply(num, rnum);\n\n  if (num.length > 16)\n    return undefined;\n\n  return num;\n}\n\nfunction isNetmask(addr) {\n  if (!Array.isArray(addr))\n    return false;\n\n  let c;\n\n  for (c = 0; (c < addr.length) && (addr[c] === 255); c++);\n\n  if (c === addr.length)\n    return true;\n\n  if ((addr[c] === 254) || (addr[c] === 252) || (addr[c] === 248) ||\n    (addr[c] === 240) || (addr[c] === 224) || (addr[c] === 192) ||\n    (addr[c] === 128) || (addr[c] === 0)) {\n    for (c++; (c < addr.length) && (addr[c] === 0); c++);\n\n    if (c === addr.length)\n      return true;\n  }\n\n  return false;\n}\n\nfunction performCallback(types, rule, value, cb, msg, arg) {\n  if (value === undefined || value === '' || window.oui.isEmptyArray(value)) {\n    cb();\n    return;\n  }\n\n  if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      if (value[i] === '')\n        continue;\n\n      if (!types[rule.type].verify(value[i], arg)) {\n        cb(new Error(msg));\n        return;\n      }\n    }\n\n    cb();\n    return;\n  }\n\n  if (types[rule.type].verify(value, arg))\n    cb();\n  else\n    cb(new Error(msg));\n}\n\nconst types = {\n  url: {\n    validator: 'url',\n    message: () => i18n.t('Must be a valid url')\n  },\n  email: {\n    validator: 'email',\n    message: () => i18n.t('Must be a valid email')\n  },\n  number: {\n    verify: (value) => {\n      return !isNaN(value);\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number'));\n    }\n  },\n  integer: {\n    verify: (value) => {\n      return types['number'].verify(value) && parseInt(value).toString() === value;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a integer'));\n    }\n  },\n  uinteger: {\n    verify: (value) => {\n      return types['integer'].verify(value) && value >= 0;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a positive integer'));\n    }\n  },\n  min: {\n    verify: (value, arg) => {\n      return types['number'].verify(value) && value >= arg;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number greater or equal to', {num: rule.arg}), rule.arg);\n    }\n  },\n  max: {\n    verify: (value, arg) => {\n      return types['number'].verify(value) && value <= arg;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number lower or equal to', {num: rule.arg}), rule.arg);\n    }\n  },\n  range: {\n    verify: (value, arg) => {\n      return types['min'].verify(value, arg[0]) && types['max'].verify(value, arg[1]);\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a number between', {min: rule.arg[0], max: rule.arg[1]}), rule.arg);\n    }\n  },\n  hostname: {\n    verify: (value) => {\n      return (value.length <= 253) &&\n        ((value.match(/^[a-zA-Z0-9]+$/) !== null ||\n        (value.match(/^[a-zA-Z0-9_][a-zA-Z0-9_\\-.]*[a-zA-Z0-9]$/) &&\n        value.match(/[^0-9.]/))));\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid hostname'));\n    }\n  },\n  ip4addr: {\n    verify: (value) => {\n      return parseIPv4(value);\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv4 address'));\n    }\n  },\n  ip6addr: {\n    verify: (value) => {\n      return parseIPv6(value);\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv6 address'));\n    }\n  },\n  ipaddr: {\n    verify: (value) => {\n      return types['ip4addr'].verify(value) || types['ip6addr'].verify(value);\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IP address'));\n    }\n  },\n  netmask4: {\n    verify: (value) => {\n      return isNetmask(parseIPv4(value));\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv4 netmask'));\n    }\n  },\n  netmask6: {\n    verify: (value) => {\n      return isNetmask(parseIPv6(value));\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid IPv6 netmask'));\n    }\n  },\n  host: {\n    verify: (value) => {\n      return types['hostname'].verify(value) || types['ipaddr'].verify(value);\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid hostname or IP address'));\n    }\n  },\n  port: {\n    verify: (value) => {\n      return types['uinteger'].verify(value) && value <= 65535;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid port number'));\n    }\n  },\n  macaddr: {\n    verify: (value) => {\n      return value.match(/^([a-fA-F0-9]{2}:){5}[a-fA-F0-9]{2}$/) !== null;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid MAC address'));\n    }\n  },\n  uciname: {\n    verify: (value) => {\n      return value.match(/^[a-zA-Z0-9_]+$/) !== null;\n    },\n    validator: (rule, value, cb) => {\n      performCallback(types, rule, value, cb, i18n.t('Must be a valid UCI identifier'));\n    }\n  }\n}\n\nvalidator.compileString = function(rule, arg) {\n  if (Object.keys(types).indexOf(rule) < 0)\n    return [];\n\n  const type = types[rule];\n  const r = {};\n\n  if (typeof(type.validator) === 'string') {\n    r.type = type.validator;\n\n    if (typeof(type.message) === 'string')\n      r.message = type.message;\n    else if (typeof(type.message) === 'function')\n      r.message = type.message();\n  } else {\n    r.type = rule;\n    r.arg = arg;\n    r.validator = type.validator;\n  }\n\n  return [r];\n}\n\nvalidator.compileFunction = function(verify, vm) {\n  const r = {\n    validator: (rule, value, callback) => {\n      const err = verify(value, vm);\n      if (typeof(err) === 'string')\n        callback(new Error(err));\n      else\n        callback();\n    }\n  }\n\n  return [r];\n}\n\nvalidator.compileObject = function(rule) {\n  const rs = [];\n\n  if (rule.type) {\n    const r = this.compileString(rule.type);\n    rs.push(...r);\n  }\n\n  if (typeof(rule.min) !== 'undefined' && typeof(rule.max) !== 'undefined') {\n    const r = this.compileString('range', [rule.min, rule.max]);\n    rs.push(...r);\n  } else {\n    if (typeof(rule.min) !== 'undefined') {\n      const r = this.compileString('min', rule.min);\n      rs.push(...r);\n    }\n\n    if (typeof(rule.max) !== 'undefined') {\n      const r = this.compileString('max', rule.max);\n      rs.push(...r);\n    }\n  }\n\n  return rs;\n}\n\n/* vm: uci-option instance */\nvalidator.compile = function(rule, vm) {\n  const type = typeof(rule);\n  if (type === 'string')\n    return this.compileString(rule);\n\n  if (type === 'function')\n    return this.compileFunction(rule, vm);\n\n  if (type === 'object')\n    return this.compileObject(rule);\n\n  return [];\n}\n\nexport default validator\n"]}]}