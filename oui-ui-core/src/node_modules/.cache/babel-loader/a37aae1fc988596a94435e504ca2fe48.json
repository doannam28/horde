{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\home.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\Project VMODEV\\\\Horde\\\\oui\\\\oui-master\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/chart/gauge';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/polar';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legendScroll';\nexport default {\n  data: function data() {\n    return {\n      tab: 'router',\n      statusLineLength: '27%',\n      sysinfo: [],\n      waninfo: [],\n      devices: [],\n      devicesMap: {},\n      leases: [],\n      leases6: [],\n      assoclist: [],\n      wanIsUp: false,\n      lastCPUTime: null,\n      resourceChart: {\n        tooltip: {\n          formatter: '{b}: {c}%'\n        },\n        series: [{\n          type: 'gauge',\n          radius: '60%',\n          center: ['25%', '50%'],\n          splitLine: {\n            length: 20\n          },\n          axisLine: {\n            lineStyle: {\n              width: 8\n            }\n          },\n          detail: {\n            formatter: '{value}%',\n            fontSize: 15\n          },\n          data: [{\n            value: 0,\n            name: this.$t('CPU usage')\n          }]\n        }, {\n          type: 'gauge',\n          radius: '60%',\n          center: ['75%', '50%'],\n          splitLine: {\n            length: 20\n          },\n          axisLine: {\n            lineStyle: {\n              width: 8\n            }\n          },\n          detail: {\n            formatter: '{value}%',\n            fontSize: 15\n          },\n          data: [{\n            value: 0,\n            name: this.$t('Memory usage')\n          }]\n        }]\n      }\n    };\n  },\n  timers: {\n    update: {\n      time: 2000,\n      autostart: true,\n      immediate: true,\n      repeat: true\n    }\n  },\n  methods: {\n    wifirate: function wifirate(sta, rx) {\n      var rate = rx ? sta.rx : sta.tx;\n      var s = '%.1f Mbit/s'.format(rate.rate / 1000);\n      s += ', %dMHz'.format(rate['40mhz'] ? 40 : 20);\n      if (rate.mcs > 0) s += ', MCS ' + rate.mcs;\n      if (rate.short_gi) s += ', Short GI';\n      return s;\n    },\n    wifiSignalIcon: function wifiSignalIcon(s) {\n      var q = -1 * (s.noise - s.signal) / 5;\n      if (q < 1) q = 1;else if (q < 2) q = 2;else if (q < 3) q = 3;else if (q < 4) q = 4;else q = 5;\n      return \"/icons/signal_\".concat(q, \".png\");\n    },\n    formatWifiRxRate: function formatWifiRxRate(row) {\n      return this.wifirate(row, true);\n    },\n    formatWifiTxRate: function formatWifiTxRate(row) {\n      return this.wifirate(row, false);\n    },\n    calcDevFlow: function calcDevFlow(flow) {\n      return flow[0] * 1000000000 + flow[1] * 1000000 + flow[2] * 1000 + flow[3];\n    },\n    update: function update() {\n      var _this = this;\n\n      this.$ubus.call('oui.system', 'cpu_time').then(function (_ref) {\n        var times = _ref.times;\n\n        if (!_this.lastCPUTime) {\n          _this.lastCPUTime = times;\n          return;\n        }\n\n        var idle1 = _this.lastCPUTime[3] + _this.lastCPUTime[4];\n        var idle2 = times[3] + times[4];\n        var total1 = 0;\n        var total2 = 0;\n\n        _this.lastCPUTime.forEach(function (t) {\n          total1 += t;\n        });\n\n        times.forEach(function (t) {\n          total2 += t;\n        });\n        _this.resourceChart.series[0].data[0].value = ((total2 - total1 - (idle2 - idle1)) / (total2 - total1) * 100).toFixed(2);\n        _this.lastCPUTime = times;\n      });\n      this.$system.getInfo().then(function (_ref2) {\n        var hostname = _ref2.hostname,\n            model = _ref2.model,\n            system = _ref2.system,\n            release = _ref2.release,\n            kernel = _ref2.kernel,\n            localtime = _ref2.localtime,\n            uptime = _ref2.uptime,\n            memory = _ref2.memory;\n        _this.sysinfo = [[_this.$t('Hostname'), hostname], [_this.$t('Model'), model], [_this.$t('Architecture'), system], [_this.$t('Firmware Version'), release.revision], [_this.$t('Kernel Version'), kernel], [_this.$t('Local Time'), new Date(localtime * 1000).toString()], [_this.$t('Uptime'), '%t'.format(uptime)]];\n        _this.resourceChart.series[1].data[0].value = ((memory.total - memory.free) / memory.total * 100).toFixed(2);\n      });\n      this.$network.load().then(function () {\n        var iface = _this.$network.getInterface('wan');\n\n        _this.waninfo = [[_this.$t('IP Address'), iface.getIPv4Addrs().join(', ')], [_this.$t('Gateway'), iface.getIPv4Gateway()], ['DNS', iface.getDNSAddrs().join(', ')]];\n        _this.wanIsUp = iface.isUp();\n      });\n      this.$ubus.call('oui.network', 'dhcp_leases').then(function (r) {\n        var leasesMap = {};\n        _this.leases = r.leases;\n\n        _this.leases.forEach(function (l) {\n          leasesMap[l.macaddr] = {\n            hostname: l.hostname,\n            ipaddr: l.ipaddr\n          };\n        });\n\n        _this.$ubus.call('oui.network', 'bwm').then(function (r) {\n          _this.devices = r.entries.map(function (dev) {\n            var lease = leasesMap[dev.macaddr];\n            dev = _objectSpread({}, dev, {\n              txrate: 0,\n              rxrate: 0\n            });\n            dev.tx = _this.calcDevFlow(dev.tx);\n            dev.rx = _this.calcDevFlow(dev.rx);\n            var ldev = _this.devicesMap[dev.macaddr];\n\n            if (ldev) {\n              dev.txrate = '%mB/s'.format((dev.tx - ldev.tx) / 2);\n              dev.rxrate = '%mB/s'.format((dev.rx - ldev.rx) / 2);\n            }\n\n            _this.devicesMap[dev.macaddr] = {\n              tx: dev.tx,\n              rx: dev.rx\n            };\n            if (lease) dev.hostname = lease.hostname;\n            return dev;\n          });\n        });\n\n        _this.$wireless.getAssoclist().then(function (assoclist) {\n          _this.assoclist = assoclist.map(function (sta) {\n            var lease = leasesMap[sta.mac.toLowerCase()];\n            if (lease) sta.host = \"\".concat(lease.hostname, \" (\").concat(lease.ipaddr, \")\");\n            return sta;\n          });\n        });\n      });\n      this.$ubus.call('oui.network', 'dhcp6_leases').then(function (r) {\n        _this.leases6 = r.leases;\n      });\n    }\n  }\n};",{"version":3,"sources":["home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-row type=\"flex\" justify=\"center\" align=\"middle\" class=\"oui-home-status-img\">\n      <img src=\"/icons/devices.png\" @click=\"tab = 'devices'\" />\n      <oui-line :length=\"statusLineLength\"></oui-line>\n      <img src=\"/icons/router.png\" @click=\"tab = 'router'\" />\n      <oui-line :length=\"statusLineLength\" :disconnect=\"!wanIsUp\"></oui-line>\n      <img src=\"/icons/internet.png\" @click=\"tab = 'internet'\" />\n    </el-row>\n    <el-tabs v-model=\"tab\" stretch>\n      <el-tab-pane name=\"devices\">\n        <span slot=\"label\">{{ $t('Terminal devices') + `(${devices.length})` }}</span>\n        <el-card :header=\"$t('Online devices')\" style=\"margin-bottom: 15px;\">\n          <el-table :data=\"devices\">\n            <el-table-column :label=\"$t('Hostname')\" prop=\"hostname\"></el-table-column>\n            <el-table-column :label=\"$t('IPv4-Address')\" prop=\"ipaddr\"></el-table-column>\n            <el-table-column :label=\"$t('MAC-Address')\" prop=\"macaddr\"></el-table-column>\n            <el-table-column :label=\"$t('RX Rate')\" prop=\"rxrate\"></el-table-column>\n            <el-table-column :label=\"$t('TX Rate')\" prop=\"txrate\"></el-table-column>\n          </el-table>\n        </el-card>\n        <el-card :header=\"$t('Active DHCP Leases')\" style=\"margin-bottom: 15px;\">\n          <el-table :data=\"leases\">\n            <el-table-column :label=\"$t('Hostname')\" prop=\"hostname\"></el-table-column>\n            <el-table-column :label=\"$t('IPv4-Address')\" prop=\"ipaddr\"></el-table-column>\n            <el-table-column :label=\"$t('MAC-Address')\" prop=\"macaddr\"></el-table-column>\n            <el-table-column :label=\"$t('Leasetime remaining')\" :formatter=\"row => row.expires <= 0 ? $t('expired') : '%t'.format(row.expires)\"></el-table-column>\n          </el-table>\n        </el-card>\n        <el-card :header=\"$t('Active DHCPv6 Leases')\" style=\"margin-bottom: 15px;\">\n          <el-table :data=\"leases6\">\n            <el-table-column :label=\"$t('Host')\" prop=\"name\"></el-table-column>\n            <el-table-column :label=\"$t('IPv6-Address')\" prop=\"ip6addr\"></el-table-column>\n            <el-table-column label=\"DUID\" prop=\"duid\"></el-table-column>\n            <el-table-column :label=\"$t('Leasetime remaining')\" :formatter=\"row => row.expires <= 0 ? $t('expired') : '%t'.format(row.expires)\"></el-table-column>\n          </el-table>\n        </el-card>\n        <el-card :header=\"$t('Associated Stations')\">\n          <el-table :data=\"assoclist\">\n            <el-table-column :label=\"$t('MAC-Address')\" prop=\"mac\"></el-table-column>\n            <el-table-column :label=\"$t('Host')\" prop=\"host\"></el-table-column>\n            <el-table-column :label=\"$t('Signal') + ' / ' + $t('Noise')\">\n              <template v-slot=\"{row}\">\n                <img :src=\"wifiSignalIcon(row)\" />\n                <span>{{' ' + row.signal + '/' + row.noise + ' dBm' }}</span>\n              </template>\n            </el-table-column>\n            <el-table-column :label=\"$t('RX Rate')\" :formatter=\"formatWifiRxRate\"></el-table-column>\n            <el-table-column :label=\"$t('TX Rate')\" :formatter=\"formatWifiTxRate\"></el-table-column>\n          </el-table>\n        </el-card>\n      </el-tab-pane>\n      <el-tab-pane name=\"router\">\n        <span slot=\"label\">{{ $t('System') }}</span>\n        <el-row :gutter=\"20\" style=\"margin-bottom: 15px\">\n          <el-col :span=\"12\">\n            <card-list :title=\"$t('System information')\" :list=\"sysinfo\"></card-list>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-card :header=\"$t('Resource usage')\">\n              <e-charts style=\"width: 100%\" :options=\"resourceChart\"></e-charts>\n            </el-card>\n          </el-col>\n        </el-row>\n      </el-tab-pane>\n      <el-tab-pane name=\"internet\">\n        <span slot=\"label\">WAN</span>\n        <el-row type=\"flex\" justify=\"center\">\n          <CardList :title=\"$t('Network')\" :list=\"waninfo\" style=\"width: 600px\"></CardList>\n        </el-row>\n      </el-tab-pane>\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport 'echarts/lib/chart/line'\nimport 'echarts/lib/chart/gauge'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/polar'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legendScroll'\n\nexport default {\n  data() {\n    return {\n      tab: 'router',\n      statusLineLength: '27%',\n      sysinfo: [],\n      waninfo: [],\n      devices: [],\n      devicesMap: {},\n      leases: [],\n      leases6: [],\n      assoclist: [],\n      wanIsUp: false,\n      lastCPUTime: null,\n      resourceChart: {\n        tooltip: {\n          formatter: '{b}: {c}%'\n        },\n        series: [\n          {\n            type: 'gauge',\n            radius: '60%',\n            center: ['25%', '50%'],\n            splitLine: {length: 20},\n            axisLine: {lineStyle: {width: 8}},\n            detail: {formatter: '{value}%', fontSize: 15},\n            data: [{value: 0, name: this.$t('CPU usage')}]\n          },\n          {\n            type: 'gauge',\n            radius: '60%',\n            center: ['75%', '50%'],\n            splitLine: {length: 20},\n            axisLine: {lineStyle: {width: 8}},\n            detail: {formatter: '{value}%', fontSize: 15},\n            data: [{value: 0, name: this.$t('Memory usage')}]\n          }\n        ]\n      }\n    }\n  },\n  timers: {\n    update: {time: 2000, autostart: true, immediate: true, repeat: true}\n  },\n  methods: {\n    wifirate(sta, rx) {\n      const rate = rx ? sta.rx : sta.tx;\n      let s = '%.1f Mbit/s'.format(rate.rate / 1000);\n      s += ', %dMHz'.format(rate['40mhz'] ? 40 : 20);\n\n      if (rate.mcs > 0)\n        s += ', MCS ' + rate.mcs;\n\n      if (rate.short_gi)\n        s += ', Short GI'\n\n      return s;\n    },\n    wifiSignalIcon(s) {\n      let q = (-1 * (s.noise - s.signal)) / 5;\n      if (q < 1)\n        q = 1;\n      else if (q < 2)\n        q = 2;\n      else if (q < 3)\n        q = 3;\n      else if (q < 4)\n        q = 4;\n      else\n        q = 5;\n      return `/icons/signal_${q}.png`;\n    },\n    formatWifiRxRate(row) {\n      return this.wifirate(row, true);\n    },\n    formatWifiTxRate(row) {\n      return this.wifirate(row, false);\n    },\n    calcDevFlow(flow) {\n      return flow[0] * 1000000000 + flow[1] * 1000000 + flow[2] * 1000 + flow[3];\n    },\n    update() {\n      this.$ubus.call('oui.system', 'cpu_time').then(({times}) => {\n        if (!this.lastCPUTime) {\n          this.lastCPUTime = times;\n          return;\n        }\n\n        let idle1 = this.lastCPUTime[3] + this.lastCPUTime[4];\n        let idle2 = times[3] + times[4];\n\n        let total1 = 0;\n        let total2 = 0;\n\n        this.lastCPUTime.forEach(t => {\n          total1 += t;\n        });\n\n        times.forEach(t => {\n          total2 += t;\n        });\n\n        this.resourceChart.series[0].data[0].value = (((total2 - total1) - (idle2 - idle1)) / (total2 - total1) * 100).toFixed(2)\n        this.lastCPUTime = times;\n      });\n\n      this.$system.getInfo().then(({hostname, model, system, release, kernel, localtime, uptime, memory}) => {\n        this.sysinfo = [\n          [this.$t('Hostname'), hostname],\n          [this.$t('Model'), model],\n          [this.$t('Architecture'), system],\n          [this.$t('Firmware Version'), release.revision],\n          [this.$t('Kernel Version'), kernel],\n          [this.$t('Local Time'), new Date(localtime * 1000).toString()],\n          [this.$t('Uptime'), '%t'.format(uptime)]\n        ];\n\n        this.resourceChart.series[1].data[0].value = ((memory.total - memory.free) / memory.total * 100).toFixed(2);\n      });\n\n      this.$network.load().then(() => {\n        const iface = this.$network.getInterface('wan');\n        this.waninfo = [\n          [this.$t('IP Address'), iface.getIPv4Addrs().join(', ')],\n          [this.$t('Gateway'), iface.getIPv4Gateway()],\n          ['DNS', iface.getDNSAddrs().join(', ')]\n        ];\n        this.wanIsUp = iface.isUp()\n      });\n\n      this.$ubus.call('oui.network', 'dhcp_leases').then(r => {\n        const leasesMap = {};\n\n        this.leases = r.leases;\n\n        this.leases.forEach(l => {\n          leasesMap[l.macaddr] = {hostname: l.hostname, ipaddr: l.ipaddr};\n        });\n\n        this.$ubus.call('oui.network', 'bwm').then(r => {\n          this.devices = r.entries.map(dev => {\n            const lease = leasesMap[dev.macaddr];\n\n            dev = {...dev, txrate: 0, rxrate: 0};\n            dev.tx = this.calcDevFlow(dev.tx);\n            dev.rx = this.calcDevFlow(dev.rx);\n\n            const ldev = this.devicesMap[dev.macaddr];\n            if (ldev) {\n              dev.txrate = '%mB/s'.format((dev.tx - ldev.tx) / 2);\n              dev.rxrate = '%mB/s'.format((dev.rx - ldev.rx) / 2);\n            }\n\n            this.devicesMap[dev.macaddr] = {tx: dev.tx, rx: dev.rx};\n\n            if (lease)\n              dev.hostname = lease.hostname;\n\n            return dev;\n          });\n        });\n\n        this.$wireless.getAssoclist().then(assoclist => {\n          this.assoclist = assoclist.map(sta => {\n            const lease = leasesMap[sta.mac.toLowerCase()];\n            if (lease)\n              sta.host = `${lease.hostname} (${lease.ipaddr})`\n            return sta;\n          });\n        });\n      });\n\n      this.$ubus.call('oui.network', 'dhcp6_leases').then(r => {\n        this.leases6 = r.leases;\n      });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.oui-home-status-img {\n  img {\n    cursor: pointer;\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}