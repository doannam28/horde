{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\plugins\\network.js","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\plugins\\network.js","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"D:\\\\Project VMODEV\\\\Horde\\\\horde-oui\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _toConsumableArray from \"D:\\\\Project VMODEV\\\\Horde\\\\horde-oui\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _classCallCheck from \"D:\\\\Project VMODEV\\\\Horde\\\\horde-oui\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Project VMODEV\\\\Horde\\\\horde-oui\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport { ubus } from \"./ubus\";\nvar network = {\n  interfaces: [],\n  devices: []\n};\n\nvar Interface =\n/*#__PURE__*/\nfunction () {\n  function Interface(iface) {\n    _classCallCheck(this, Interface);\n\n    this.status = iface;\n    this.name = iface.interface;\n  }\n\n  _createClass(Interface, [{\n    key: \"isUp\",\n    value: function isUp() {\n      return this.status['up'];\n    }\n  }, {\n    key: \"getUptime\",\n    value: function getUptime() {\n      var uptime = this.status['uptime'];\n      return isNaN(uptime) ? 0 : uptime;\n    }\n  }, {\n    key: \"getDevice\",\n    value: function getDevice() {\n      var l3dev = this.status['l3_device'];\n      if (l3dev) return network.getDevice(l3dev);\n      return undefined;\n    }\n  }, {\n    key: \"getAddrs\",\n    value: function getAddrs(key, mask) {\n      var rv = [];\n      var addrs = this.status[key];\n\n      if (addrs) {\n        addrs.forEach(function (addr) {\n          var address = addr.address;\n          if (mask) address += \"/\".concat(addr.mask);\n          rv.push(address);\n        });\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getIPv4Addrs\",\n    value: function getIPv4Addrs(mask) {\n      return this.getAddrs('ipv4-address', mask);\n    }\n  }, {\n    key: \"getIPv6Addrs\",\n    value: function getIPv6Addrs(mask) {\n      var rv = [];\n      rv.push.apply(rv, _toConsumableArray(this.getAddrs('ipv6-address', mask)));\n      rv.push.apply(rv, _toConsumableArray(this.getAddrs('ipv6-prefix-assignment', mask)));\n      return rv;\n    }\n  }, {\n    key: \"getIPv4Gateway\",\n    value: function getIPv4Gateway() {\n      var rt = this.status['route'];\n\n      if (rt) {\n        for (var i = 0; i < rt.length; i++) {\n          if (rt[i].target === '0.0.0.0' && rt[i].mask === 0) return rt[i].nexthop;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getIPv6Gateway\",\n    value: function getIPv6Gateway() {\n      var rt = this.status['route'];\n\n      if (rt) {\n        for (var i = 0; i < rt.length; i++) {\n          if (rt[i].target === '::' && rt[i].mask === 0) return rt[i].nexthop;\n        }\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"getDNSAddrs\",\n    value: function getDNSAddrs() {\n      var dns4 = this.getIPv4DNS();\n      var dns6 = this.getIPv6DNS();\n      return [].concat(_toConsumableArray(dns4), _toConsumableArray(dns6));\n    }\n  }, {\n    key: \"getIPv4DNS\",\n    value: function getIPv4DNS() {\n      var rv = [];\n      var dns = this.status['dns-server'];\n\n      if (dns) {\n        for (var i = 0; i < dns.length; i++) {\n          if (dns[i].indexOf(':') === -1) rv.push(dns[i]);\n        }\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getIPv6DNS\",\n    value: function getIPv6DNS() {\n      var rv = [];\n      var dns = this.status['dns-server'];\n\n      if (dns) {\n        for (var i = 0; i < dns.length; i++) {\n          if (dns[i].indexOf(':') > -1) rv.push(dns[i]);\n        }\n      }\n\n      return rv;\n    }\n  }, {\n    key: \"getStatistics\",\n    value: function getStatistics() {\n      var dev = this.getDevice();\n      if (dev) return dev.statistics;\n      return {};\n    }\n  }]);\n\n  return Interface;\n}();\n\nnetwork.load = function () {\n  var _this = this;\n\n  var promises = [];\n  promises.push(ubus.call('network.device', 'status'));\n  promises.push(ubus.call('network.interface', 'dump'));\n  return new Promise(function (resolve) {\n    Promise.all(promises).then(function (r) {\n      var devices = r[0];\n      _this.devices = Object.keys(devices).map(function (name) {\n        return _objectSpread({\n          name: name\n        }, devices[name]);\n      }).filter(function (d) {\n        return d.name !== 'lo';\n      });\n      _this.interfaces = r[1].interface.map(function (iface) {\n        return new Interface(iface);\n      }).filter(function (i) {\n        return i.name !== 'loopback';\n      });\n      resolve();\n    });\n  });\n};\n\nnetwork.getInterface = function (name) {\n  var interfaces = this.interfaces;\n\n  for (var i = 0; i < interfaces.length; i++) {\n    if (interfaces[i].name === name) return interfaces[i];\n  }\n\n  return null;\n};\n\nnetwork.getInterfaces = function () {\n  return this.interfaces;\n};\n\nnetwork.getDevice = function (name) {\n  var devices = this.devices;\n\n  for (var i = 0; i < devices.length; i++) {\n    if (devices[i].name === name) return devices[i];\n  }\n\n  return null;\n};\n\nnetwork.getDevices = function () {\n  return this.devices;\n};\n\nexport default {\n  install: function install(Vue) {\n    Vue.prototype.$network = network;\n  }\n};",{"version":3,"sources":["D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\plugins\\network.js"],"names":["ubus","network","interfaces","devices","Interface","iface","status","name","interface","uptime","isNaN","l3dev","getDevice","undefined","key","mask","rv","addrs","forEach","addr","address","push","getAddrs","rt","i","length","target","nexthop","dns4","getIPv4DNS","dns6","getIPv6DNS","dns","indexOf","dev","statistics","load","promises","call","Promise","resolve","all","then","r","Object","keys","map","filter","d","getInterface","getInterfaces","getDevices","install","Vue","prototype","$network"],"mappings":"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","sourcesContent":["import {ubus} from './ubus'\n\nconst network = {\n  interfaces: [],\n  devices: []\n}\n\nclass Interface {\n  constructor(iface) {\n    this.status = iface;\n    this.name = iface.interface;\n  }\n\n  isUp() {\n    return this.status['up'];\n  }\n\n  getUptime() {\n    const uptime = this.status['uptime'];\n    return isNaN(uptime) ? 0 : uptime;\n  }\n\n  getDevice() {\n    const l3dev = this.status['l3_device'];\n    if (l3dev)\n      return network.getDevice(l3dev);\n\n    return undefined;\n  }\n\n  getAddrs(key, mask) {\n    const rv = [];\n    const addrs = this.status[key];\n\n    if (addrs) {\n      addrs.forEach(addr => {\n        let address = addr.address;\n        if (mask)\n          address += `/${addr.mask}`;\n        rv.push(address);\n      });\n    }\n\n    return rv;\n  }\n\n  getIPv4Addrs(mask) {\n    return this.getAddrs('ipv4-address', mask);\n  }\n\n  getIPv6Addrs(mask) {\n    const rv = [];\n\n    rv.push(...this.getAddrs('ipv6-address', mask))\n    rv.push(...this.getAddrs('ipv6-prefix-assignment', mask))\n\n    return rv;\n  }\n\n  getIPv4Gateway() {\n    const rt = this.status['route'];\n\n    if (rt) {\n      for (let i = 0; i < rt.length; i++)\n        if (rt[i].target === '0.0.0.0' && rt[i].mask === 0)\n          return rt[i].nexthop;\n    }\n\n    return undefined;\n  }\n\n  getIPv6Gateway() {\n    const rt = this.status['route'];\n\n    if (rt) {\n      for (let i = 0; i < rt.length; i++)\n        if (rt[i].target === '::' && rt[i].mask === 0)\n          return rt[i].nexthop;\n    }\n\n    return undefined;\n  }\n\n  getDNSAddrs() {\n    const dns4 = this.getIPv4DNS();\n    const dns6 = this.getIPv6DNS();\n\n    return [...dns4, ...dns6];\n  }\n\n  getIPv4DNS() {\n    const rv = [ ];\n    const dns = this.status['dns-server'];\n\n    if (dns) {\n      for (let i = 0; i < dns.length; i++)\n        if (dns[i].indexOf(':') === -1)\n          rv.push(dns[i]);\n    }\n\n    return rv;\n  }\n\n  getIPv6DNS() {\n    const rv = [ ];\n    const dns = this.status['dns-server'];\n\n    if (dns) {\n      for (let i = 0; i < dns.length; i++)\n        if (dns[i].indexOf(':') > -1)\n          rv.push(dns[i]);\n    }\n\n    return rv;\n  }\n\n  getStatistics() {\n    const dev = this.getDevice();\n    if (dev)\n      return dev.statistics;\n    return {};\n  }\n}\n\nnetwork.load = function() {\n  const promises = [];\n\n  promises.push(ubus.call('network.device', 'status'));\n  promises.push(ubus.call('network.interface', 'dump'));\n\n  return new Promise(resolve => {\n    Promise.all(promises).then(r => {\n      const devices = r[0];\n\n      this.devices = Object.keys(devices).map(name => {\n        return {name: name, ...devices[name]};\n      }).filter(d => d.name !== 'lo');\n\n      this.interfaces = r[1].interface.map(iface => new Interface(iface)).filter(i => i.name !== 'loopback');\n\n      resolve();\n    });\n  });\n}\n\nnetwork.getInterface = function(name) {\n  const interfaces = this.interfaces;\n\n  for (let i = 0; i < interfaces.length; i++) {\n    if (interfaces[i].name === name)\n      return interfaces[i];\n  }\n\n  return null;\n}\n\nnetwork.getInterfaces = function() {\n  return this.interfaces;\n}\n\nnetwork.getDevice = function(name) {\n  const devices = this.devices;\n\n  for (let i = 0; i < devices.length; i++) {\n    if (devices[i].name === name)\n      return devices[i];\n  }\n\n  return null;\n}\n\nnetwork.getDevices = function() {\n  return this.devices;\n}\n\nexport default {\n  install(Vue) {\n    Vue.prototype.$network = network;\n  }\n}\n"]}]}