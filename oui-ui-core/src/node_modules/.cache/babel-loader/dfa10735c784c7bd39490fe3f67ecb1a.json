{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\cron.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\cron.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"D:\\\\Project VMODEV\\\\Horde\\\\oui\\\\oui-master\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      data: [],\n      dialogVisible: false,\n      add: false,\n      edit: {\n        index: 0,\n        min: '',\n        hour: '',\n        day: '',\n        month: '',\n        week: '',\n        command: ''\n      },\n      rules: {\n        min: [{\n          required: true,\n          message: this.$t('This field is required')\n        }],\n        hour: [{\n          required: true,\n          message: this.$t('This field is required')\n        }],\n        day: [{\n          required: true,\n          message: this.$t('This field is required')\n        }],\n        month: [{\n          required: true,\n          message: this.$t('This field is required')\n        }],\n        week: [{\n          required: true,\n          message: this.$t('This field is required')\n        }],\n        command: [{\n          required: true,\n          message: this.$t('This field is required')\n        }]\n      }\n    };\n  },\n  methods: {\n    getCrontab: function getCrontab() {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.$ubus.call('oui.system', 'crontab_get').then(function (r) {\n          var index = 0;\n          var data = [];\n          r.entries.forEach(function (item) {\n            data.push(_objectSpread({\n              index: index++\n            }, item));\n          });\n          _this.data = data;\n          resolve();\n        });\n      });\n    },\n    setCrontab: function setCrontab(data) {\n      return this.$ubus.call('oui.system', 'crontab_set', {\n        data: data\n      });\n    },\n    showEdit: function showEdit(index) {\n      Object.assign(this.edit, this.data[index]);\n      this.dialogVisible = true;\n      this.add = false;\n      this.dialogTitle = 'Edit';\n    },\n    showAdd: function showAdd() {\n      this.dialogVisible = true;\n      this.add = true;\n      this.edit.min = '*';\n      this.edit.hour = '*';\n      this.edit.day = '*';\n      this.edit.month = '*';\n      this.edit.week = '*';\n      this.edit.command = '';\n      this.index = this.data.length;\n    },\n    handleDelete: function handleDelete(index) {\n      var _this2 = this;\n\n      var cron = this.data[index];\n      var content = this.$t('cron-del-confirm', {\n        cron: \"\".concat(cron.min, \" \").concat(cron.hour, \" \").concat(cron.day, \" \").concat(cron.month, \" \").concat(cron.week, \" \").concat(cron.command)\n      });\n      this.$confirm(content, this.$t('Delete')).then(function () {\n        _this2.data.splice(index, 1);\n\n        _this2.apply().then(function () {\n          _this2.$message.success(_this2.$t('success'));\n        });\n      });\n    },\n    handleEdit: function handleEdit() {\n      var _this3 = this;\n\n      this.$refs['edit'].validate(function (valid) {\n        if (!valid) return;\n        if (_this3.add) _this3.data.push(_this3.edit);else Object.assign(_this3.data[_this3.edit.index], _this3.edit);\n        _this3.dialogVisible = false;\n\n        _this3.apply().then(function () {\n          _this3.$message.success(_this3.$t('success'));\n        });\n      });\n    },\n    apply: function apply() {\n      var _this4 = this;\n\n      return new Promise(function (resolve) {\n        var crons = [];\n\n        _this4.data.forEach(function (item) {\n          var expr = \"\".concat(item.min, \" \").concat(item.hour, \" \").concat(item.day, \" \").concat(item.month, \" \").concat(item.week, \" \").concat(item.command, \"\\n\");\n          crons.push(expr);\n        });\n\n        _this4.setCrontab(crons.join('')).then(function () {\n          _this4.getCrontab().then(function () {\n            resolve();\n          });\n        });\n      });\n    }\n  },\n  created: function created() {\n    this.getCrontab();\n  }\n};",{"version":3,"sources":["cron.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-button type=\"primary\" size=\"mini\" style=\"margin-bottom: 10px\" @click=\"showAdd\">{{ $t('Add') }}</el-button>\n    <el-table :data=\"data\">\n      <el-table-column prop=\"min\" :label=\"$t('Minute')\" width=\"140\"></el-table-column>\n      <el-table-column prop=\"hour\" :label=\"$t('Hour')\" width=\"140\"></el-table-column>\n      <el-table-column prop=\"day\" :label=\"$t('Day')\" width=\"140\"></el-table-column>\n      <el-table-column prop=\"month\" :label=\"$t('Month')\" width=\"140\"></el-table-column>\n      <el-table-column prop=\"week\" :label=\"$t('Week')\" width=\"140\"></el-table-column>\n      <el-table-column prop=\"command\" :label=\"$t('Command')\"></el-table-column>\n      <el-table-column label=\"#\" width=\"200\">\n        <template v-slot=\"{$index}\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"showEdit($index)\">{{ $t('Edit') }}</el-button>\n          <el-button type=\"danger\" size=\"mini\" @click=\"handleDelete($index)\">{{ $t('Delete') }}</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :visible.sync=\"dialogVisible\" :title=\"add ? $t('Add') : $t('Edit')\">\n      <el-form label-width=\"100px\" label-position=\"left\" :model=\"edit\" ref=\"edit\" :rules=\"rules\">\n        <el-form-item :label=\"$t('Minute')\" prop=\"min\">\n          <el-input v-model=\"edit.min\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Hour')\" prop=\"hour\">\n          <el-input v-model=\"edit.hour\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Day')\" prop=\"day\">\n          <el-input v-model=\"edit.day\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Month')\" prop=\"month\">\n          <el-input v-model=\"edit.month\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Week')\" prop=\"week\">\n          <el-input v-model=\"edit.week\"></el-input>\n        </el-form-item>\n        <el-form-item :label=\"$t('Command')\" prop=\"command\">\n          <el-input v-model=\"edit.command\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{ $t('Cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"handleEdit\">{{ $t('OK') }}</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      data: [],\n      dialogVisible: false,\n      add: false,\n      edit: {\n        index: 0,\n        min: '',\n        hour: '',\n        day: '',\n        month: '',\n        week: '',\n        command: ''\n      },\n      rules: {\n        min: [\n          {required: true, message: this.$t('This field is required')}\n        ],\n        hour: [\n          {required: true, message: this.$t('This field is required')}\n        ],\n        day: [\n          {required: true, message: this.$t('This field is required')}\n        ],\n        month: [\n          {required: true, message: this.$t('This field is required')}\n        ],\n        week: [\n          {required: true, message: this.$t('This field is required')}\n        ],\n        command: [\n          {required: true, message: this.$t('This field is required')}\n        ]\n      }\n    }\n  },\n  methods: {\n    getCrontab() {\n      return new Promise(resolve => {\n        this.$ubus.call('oui.system', 'crontab_get').then(r => {\n          let index = 0;\n          const data = []\n\n          r.entries.forEach(item => {\n            data.push({\n              index: index++,\n              ...item\n            });\n          });\n          this.data = data;\n          resolve();\n        });\n      });\n    },\n    setCrontab(data) {\n      return this.$ubus.call('oui.system', 'crontab_set', {data});\n    },\n    showEdit(index) {\n      Object.assign(this.edit, this.data[index]);\n      this.dialogVisible = true;\n      this.add = false;\n      this.dialogTitle = 'Edit';\n    },\n    showAdd() {\n      this.dialogVisible = true;\n      this.add = true;\n      this.edit.min = '*';\n      this.edit.hour = '*';\n      this.edit.day = '*';\n      this.edit.month = '*';\n      this.edit.week = '*';\n      this.edit.command = '';\n      this.index = this.data.length;\n    },\n    handleDelete(index) {\n      const cron = this.data[index];\n      const content = this.$t('cron-del-confirm', {cron: `${cron.min} ${cron.hour} ${cron.day} ${cron.month} ${cron.week} ${cron.command}`});\n      this.$confirm(content, this.$t('Delete')).then(() => {\n        this.data.splice(index, 1);\n        this.apply().then(() => {\n          this.$message.success(this.$t('success'));\n        });\n      });\n    },\n    handleEdit() {\n      this.$refs['edit'].validate(valid => {\n        if (!valid)\n          return;\n\n        if (this.add)\n          this.data.push(this.edit);\n        else\n          Object.assign(this.data[this.edit.index], this.edit);\n\n        this.dialogVisible = false;\n        this.apply().then(() => {\n          this.$message.success(this.$t('success'));\n        });\n      });\n    },\n    apply() {\n      return new Promise(resolve => {\n        const crons = [];\n\n        this.data.forEach(item => {\n          const expr = `${item.min} ${item.hour} ${item.day} ${item.month} ${item.week} ${item.command}\\n`;\n          crons.push(expr);\n        });\n\n        this.setCrontab(crons.join('')).then(() => {\n          this.getCrontab().then(() => {\n            resolve();\n          });\n        });\n      });\n    }\n  },\n  created() {\n    this.getCrontab();\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system"}]}