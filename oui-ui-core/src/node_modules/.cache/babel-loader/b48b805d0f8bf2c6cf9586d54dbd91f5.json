{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\network\\firewall\\zone.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\network\\firewall\\zone.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    zones: Array,\n    targets: Array\n  },\n  data: function data() {\n    return {\n      interfaces: [],\n      families: [['', this.$t('IPv4 and IPv6')], ['ipv4', this.$t('IPv4 only')], ['ipv6', this.$t('IPv6 only')]]\n    };\n  },\n  methods: {\n    loadDestZones: function loadDestZones(sid) {\n      var z = this.$firewall.findZoneBySid(sid);\n      return z.findForwardsBy('src').map(function (z) {\n        return z.dest();\n      });\n    },\n    loadSrcZones: function loadSrcZones(sid) {\n      var z = this.$firewall.findZoneBySid(sid);\n      return z.findForwardsBy('dest').map(function (z) {\n        return z.src();\n      });\n    },\n    excludeZone: function excludeZone(sid) {\n      var z = this.$firewall.findZoneBySid(sid);\n      if (z) return z.name();\n      return undefined;\n    },\n    saveDestZones: function saveDestZones(sid, value) {\n      var _this = this;\n\n      var z = this.$firewall.findZoneBySid(sid);\n      var dests = value;\n      var i = 0;\n      this.$firewall.forwards.forEach(function (fwd) {\n        if (fwd.src() !== z.name()) return;\n        if (i < dests.length) fwd.set('dest', dests[i++]);else _this.$uci.del('firewall', fwd.sid);\n      });\n\n      while (i < dests.length) {\n        var _sid = this.$uci.add('firewall', 'forwarding');\n\n        this.$uci.set('firewall', _sid, 'src', z.name());\n        this.$uci.set('firewall', _sid, 'dest', dests[i++]);\n      }\n    },\n    saveSrcZones: function saveSrcZones(sid, value) {\n      var _this2 = this;\n\n      var z = this.$firewall.findZoneBySid(sid);\n      var srcs = value;\n      var i = 0;\n      this.$firewall.forwards.forEach(function (fwd) {\n        if (fwd.dest() !== z.name()) return;\n        if (i < srcs.length) fwd.set('src', srcs[i++]);else _this2.$uci.del('firewall', fwd.sid);\n      });\n\n      while (i < srcs.length) {\n        var _sid2 = this.$uci.add('firewall', 'forwarding');\n\n        this.$uci.set('firewall', _sid2, 'src', srcs[i++]);\n        this.$uci.set('firewall', _sid2, 'dest', z.name());\n      }\n    },\n    beforeDelZone: function beforeDelZone(sid) {\n      var _this3 = this;\n\n      var z = this.$firewall.findZoneBySid(sid);\n      this.$firewall.forwards.forEach(function (fwd) {\n        if (fwd.src() !== z.name() && fwd.dest() !== z.name()) return;\n\n        _this3.$uci.del('firewall', fwd.sid);\n      });\n    },\n    addZone: function addZone(self) {\n      var _this4 = this;\n\n      return new Promise(function (resolve) {\n        _this4.$prompt(_this4.$t('Please input a name'), _this4.$t('Add'), {\n          inputValidator: function inputValidator(value) {\n            if (!value) return true;\n            var sections = self.sections;\n\n            for (var i = 0; i < sections.length; i++) {\n              if (sections[i].name === value) return _this4.$t('Name already used');\n            }\n\n            return true;\n          }\n        }).then(function (r) {\n          if (!r.value) return;\n\n          var z = _this4.$firewall.createZone(r.value);\n\n          resolve(z.sid);\n        });\n      });\n    }\n  },\n  created: function created() {\n    var _this5 = this;\n\n    this.$network.load().then(function () {\n      _this5.interfaces = _this5.$network.getInterfaces().map(function (item) {\n        return item.name;\n      });\n    });\n  }\n};",{"version":3,"sources":["zone.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <uci-section type=\"zone\" :title=\"$t('Zones')\" table addable :add=\"addZone\" :before-del=\"beforeDelZone\">\n    <uci-option-dummy :label=\"$t('Name')\" name=\"name\"></uci-option-dummy>\n    <uci-option-list :label=\"$t('Input')\" name=\"input\" :options=\"targets\" initial=\"ACCEPT\" required></uci-option-list>\n    <uci-option-list :label=\"$t('Output')\" name=\"output\" :options=\"targets\" initial=\"ACCEPT\" required></uci-option-list>\n    <uci-option-list :label=\"$t('Forward')\" name=\"forward\" :options=\"targets\" initial=\"REJECT\" required></uci-option-list>\n    <uci-option-switch :label=\"$t('Masquerading')\" name=\"masq\"></uci-option-switch>\n    <uci-option-switch :label=\"$t('MSS clamping')\" name=\"mtu_fix\"></uci-option-switch>\n    <uci-table-expand>\n      <uci-option-list :label=\"$t('Covered networks')\" name=\"network\" :options=\"interfaces\" multiple></uci-option-list>\n      <uci-option-list :label=\"$t('Restrict to address family')\" name=\"family\" :options=\"families\"></uci-option-list>\n      <uci-option-dlist :label=\"$t('Restrict Masquerading to given source subnets')\" name=\"masq_src\" :options=\"families\" depend=\"family == '' || family == 'ipv4'\"></uci-option-dlist>\n      <uci-option-dlist :label=\"$t('Restrict Masquerading to given destination subnets')\" name=\"masq_dest\" :options=\"families\" depend=\"family == '' || family == 'ipv4'\"></uci-option-dlist>\n      <uci-option-switch :label=\"$t('Force connection tracking')\" name=\"conntrack\"></uci-option-switch>\n      <uci-option-switch :label=\"$t('Enable logging on this zone')\" name=\"log\"></uci-option-switch>\n      <uci-option-input :label=\"$t('Limit log messages')\" name=\"log_limit\" placeholder=\"10/minute\" depend=\"log\"></uci-option-input>\n      <uci-option-list :label=\"$t('Allow forward to destination zones')\" name=\"out\" :load=\"loadDestZones\" :save=\"saveDestZones\" :options=\"zones\" :exclude=\"excludeZone\" multiple></uci-option-list>\n      <uci-option-list :label=\"$t('Allow forward from source zones')\" name=\"in\" :load=\"loadSrcZones\" :save=\"saveSrcZones\" :options=\"zones\" :exclude=\"excludeZone\" multiple></uci-option-list>\n    </uci-table-expand>\n  </uci-section>\n</template>\n\n<script>\nexport default {\n  props: {\n    zones: Array,\n    targets: Array\n  },\n  data() {\n    return {\n      interfaces: [],\n      families:[\n        ['', this.$t('IPv4 and IPv6')],\n        ['ipv4', this.$t('IPv4 only')],\n        ['ipv6', this.$t('IPv6 only')]\n      ]\n    }\n  },\n  methods: {\n    loadDestZones(sid) {\n      const z = this.$firewall.findZoneBySid(sid);\n      return z.findForwardsBy('src').map(z => z.dest());\n    },\n    loadSrcZones(sid) {\n      const z = this.$firewall.findZoneBySid(sid);\n      return z.findForwardsBy('dest').map(z => z.src());\n    },\n    excludeZone(sid) {\n      const z = this.$firewall.findZoneBySid(sid);\n      if (z)\n        return z.name();\n      return undefined;\n    },\n    saveDestZones(sid, value) {\n      const z = this.$firewall.findZoneBySid(sid);\n      const dests = value;\n      let i = 0;\n\n      this.$firewall.forwards.forEach(fwd => {\n        if (fwd.src() !== z.name())\n          return;\n\n        if (i < dests.length)\n          fwd.set('dest', dests[i++]);\n        else\n          this.$uci.del('firewall', fwd.sid);\n      });\n\n      while (i < dests.length) {\n        const sid = this.$uci.add('firewall', 'forwarding');\n\n        this.$uci.set('firewall', sid, 'src', z.name());\n        this.$uci.set('firewall', sid, 'dest', dests[i++]);\n      }\n    },\n    saveSrcZones(sid, value) {\n      const z = this.$firewall.findZoneBySid(sid);\n      const srcs = value;\n      let i = 0;\n\n      this.$firewall.forwards.forEach(fwd => {\n        if (fwd.dest() !== z.name())\n          return;\n\n        if (i < srcs.length)\n          fwd.set('src', srcs[i++]);\n        else\n          this.$uci.del('firewall', fwd.sid);\n      });\n\n      while (i < srcs.length) {\n        const sid = this.$uci.add('firewall', 'forwarding');\n\n        this.$uci.set('firewall', sid, 'src', srcs[i++]);\n        this.$uci.set('firewall', sid, 'dest', z.name());\n      }\n    },\n    beforeDelZone(sid) {\n      const z = this.$firewall.findZoneBySid(sid);\n      this.$firewall.forwards.forEach(fwd => {\n        if (fwd.src() !== z.name() && fwd.dest() !== z.name())\n          return;\n        this.$uci.del('firewall', fwd.sid);\n      });\n    },\n    addZone(self) {\n      return new Promise(resolve => {\n        this.$prompt(this.$t('Please input a name'), this.$t('Add'), {\n          inputValidator: value => {\n            if (!value)\n              return true;\n\n            const sections = self.sections;\n            for (let i = 0; i < sections.length; i++)\n              if (sections[i].name === value)\n                return this.$t('Name already used');\n\n            return true;\n          }\n        }).then(r => {\n          if (!r.value)\n            return;\n\n          const z = this.$firewall.createZone(r.value);\n          resolve(z.sid);\n        });\n      });\n    }\n  },\n  created() {\n    this.$network.load().then(() => {\n      this.interfaces = this.$network.getInterfaces().map(item => item.name);\n    });\n  }\n}\n</script>\n"],"sourceRoot":"src/views/network/firewall"}]}