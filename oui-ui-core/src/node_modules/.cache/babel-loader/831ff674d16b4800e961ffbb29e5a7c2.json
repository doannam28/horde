{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\upgrade.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\upgrade.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'upgrade',\n  data: function data() {\n    return {\n      sid: '',\n      fileListArchive: [],\n      fileListFirmware: []\n    };\n  },\n  methods: {\n    restoreBackup: function restoreBackup() {\n      return this.$ubus.call('oui.system', 'backup_restore');\n    },\n    testUpgrade: function testUpgrade() {\n      return this.$ubus.call('rpc-sys', 'upgrade_test');\n    },\n    startUpgrade: function startUpgrade(keep) {\n      return this.$ubus.call('rpc-sys', 'upgrade_start', {\n        keep: keep\n      });\n    },\n    cleanUpgrade: function cleanUpgrade() {\n      return this.$ubus.call('rpc-sys', 'upgrade_clean');\n    },\n    cleanBackup: function cleanBackup() {\n      return this.$ubus.call('oui.system', 'backup_clean');\n    },\n    generateArchive: function generateArchive() {\n      this.$refs['backup'].submit();\n    },\n    performReset: function performReset() {\n      var _this = this;\n\n      this.$confirm(this.$t('This will reset the system to its initial configuration, all changes made since the initial flash will be lost!'), this.$t('Really reset all changes?')).then(function () {\n        _this.$ubus.call('rpc-sys', 'factory').then(function () {\n          _this.$reconnect(_this.$t('Rebooting...'));\n        });\n      });\n    },\n    uploadFile: function uploadFile(ref) {\n      this.$refs[ref].submit();\n    },\n    onUploadArchiveSuccess: function onUploadArchiveSuccess(res) {\n      var _this2 = this;\n\n      var title = this.$t('Backup restore');\n      var content = '<p>' + this.$t('backup archive was uploaded completely', {\n        btn: this.$t('OK')\n      }) + '</p>';\n      content += '<ul>';\n      content += \"<li><strong>\".concat(this.$t('Checksum'), \": </strong>\").concat(res.checksum, \"</li>\");\n      var size = (res.size / 1024).toFixed(2);\n      content += \"<li><strong>\".concat(this.$t('Size'), \": </strong>\").concat(size, \" KB</li>\");\n      content += '</ul>';\n      this.$confirm(content, title, {\n        dangerouslyUseHTMLString: true\n      }).then(function () {\n        _this2.restoreBackup().then(function (r) {\n          if (r.code === 0) {\n            content = _this2.$t('The backup was successfully restored, it is advised to reboot the system now in order to apply all configuration changes.');\n\n            _this2.$confirm(content, title, {\n              confirmButtonText: _this2.$t('Reboot now')\n            }).then(function () {\n              _this2.$system.reboot().then(function () {\n                _this2.$reconnect(_this2.$t('Rebooting...'));\n              });\n            });\n          } else {\n            content = _this2.$t('Backup restoration failed, Make sure that you choose the file format for your platform.');\n\n            _this2.$confirm(content, title, {\n              showCancelButton: false,\n              confirmButtonText: _this2.$t('Close')\n            }).then(function () {\n              _this2.cleanBackup();\n            });\n          }\n        });\n      });\n    },\n    onUploadFirmwareSuccess: function onUploadFirmwareSuccess(info) {\n      var _this3 = this;\n\n      this.testUpgrade().then(function (res) {\n        if (res.code === 0) {\n          var title = _this3.$t('Verify firmware');\n\n          var content = '<p>' + _this3.$t('The firmware image was uploaded completely', {\n            btn: _this3.$t('OK')\n          }) + '</p>';\n          content += '<ul>';\n          content += \"<li><strong>\".concat(_this3.$t('Checksum'), \": </strong>\").concat(info.checksum, \"</li>\");\n          var size = (info.size / 1024 / 1024).toFixed(2);\n          content += \"<li><strong>\".concat(_this3.$t('Size'), \": </strong>\").concat(size, \" MB</li>\");\n          content += '</ul>';\n          content += \"<input id=\\\"upgrade-firmware-keep\\\" type=\\\"checkbox\\\" checked> \".concat(_this3.$t('Keep configuration when reflashing'));\n\n          _this3.$confirm(content, title, {\n            showClose: false,\n            closeOnClickModal: false,\n            dangerouslyUseHTMLString: true\n          }).then(function () {\n            var keep = document.getElementById('upgrade-firmware-keep').checked;\n\n            _this3.startUpgrade(keep).then(function () {\n              _this3.$reconnect(_this3.$t('Upgrading...'));\n            });\n          }).catch(function () {\n            _this3.cleanUpgrade();\n          });\n        } else {\n          var _content = _this3.$t('The uploaded image file does not contain a supported format. Make sure that you choose the generic image format for your platform.');\n\n          _this3.$confirm(_content, _this3.$t('Invalid image'), {\n            showCancelButton: false,\n            confirmButtonText: _this3.$t('Close')\n          }).then(function () {\n            _this3.cleanUpgrade();\n          });\n        }\n      });\n    }\n  },\n  created: function created() {\n    this.sid = this.$session.sid();\n  }\n};",{"version":3,"sources":["upgrade.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card :header=\"$t('Backup / Restore')\" style=\"margin-bottom: 15px\">\n      <form ref=\"backup\" method=\"POST\" action=\"/cgi-bin/cgi-backup\">\n        <input v-show=\"false\" type=\"text\" :value=\"sid\" name=\"sessionid\" />\n      </form>\n      <p>{{ $t('Backup-Restore-desc') }}</p>\n      <el-button type=\"primary\" size=\"small\" @click=\"generateArchive\">{{ $t('Generate archive') }}</el-button>\n      <el-button type=\"danger\" size=\"small\" @click=\"performReset\">{{ $t('Perform reset') }}</el-button>\n      <p>{{ $t('To restore configuration files, you can upload a previously generated backup archive here.') }}</p>\n      <el-upload ref=\"archive\" action=\"/cgi-bin/cgi-upload\" :on-success=\"onUploadArchiveSuccess\" :file-list=\"fileListArchive\" :auto-upload=\"false\" :limit=\"1\" :data=\"{filename: '/tmp/backup.tar.gz', sessionid: sid}\" style=\"width: 600px\">\n        <el-button slot=\"trigger\" size=\"small\" type=\"primary\">{{ $t('Select File') }}</el-button>\n        <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"uploadFile('archive')\">{{ $t('Upload archive...') }}</el-button>\n      </el-upload>\n    </el-card>\n    <el-card :header=\"$t('Flash new firmware image')\">\n      <p>{{ $t('Upgrade-Firmware-desc') }}</p>\n      <el-upload ref=\"firmware\" action=\"/cgi-bin/cgi-upload\" :on-success=\"onUploadFirmwareSuccess\" :file-list=\"fileListFirmware\" :auto-upload=\"false\" :limit=\"1\" :data=\"{filename: '/tmp/firmware.bin', sessionid: sid}\" style=\"width: 600px\">\n        <el-button slot=\"trigger\" size=\"small\" type=\"primary\">{{ $t('Select File') }}</el-button>\n        <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"uploadFile('firmware')\">{{ $t('Upload Firmware...') }}</el-button>\n      </el-upload>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'upgrade',\n  data() {\n    return {\n      sid: '',\n      fileListArchive: [],\n      fileListFirmware: []\n    }\n  },\n  methods: {\n    restoreBackup() {\n      return this.$ubus.call('oui.system', 'backup_restore');\n    },\n    testUpgrade() {\n      return this.$ubus.call('rpc-sys', 'upgrade_test');\n    },\n    startUpgrade(keep) {\n      return this.$ubus.call('rpc-sys', 'upgrade_start', {keep});\n    },\n    cleanUpgrade() {\n      return this.$ubus.call('rpc-sys', 'upgrade_clean');\n    },\n    cleanBackup() {\n      return this.$ubus.call('oui.system', 'backup_clean');\n    },\n    generateArchive() {\n      this.$refs['backup'].submit();\n    },\n    performReset() {\n      this.$confirm(this.$t('This will reset the system to its initial configuration, all changes made since the initial flash will be lost!'), this.$t('Really reset all changes?')).then(() => {\n        this.$ubus.call('rpc-sys', 'factory').then(() => {\n          this.$reconnect(this.$t('Rebooting...'));\n        });\n      });\n    },\n    uploadFile(ref) {\n      this.$refs[ref].submit();\n    },\n    onUploadArchiveSuccess(res) {\n      let title = this.$t('Backup restore');\n      let content = '<p>' + this.$t('backup archive was uploaded completely', {btn: this.$t('OK')}) + '</p>';\n      content += '<ul>';\n      content += `<li><strong>${this.$t('Checksum')}: </strong>${res.checksum}</li>`;\n\n      const size = (res.size / 1024).toFixed(2);\n      content += `<li><strong>${this.$t('Size')}: </strong>${size} KB</li>`;\n      content += '</ul>';\n\n      this.$confirm(content, title, {\n        dangerouslyUseHTMLString: true\n      }).then(() => {\n        this.restoreBackup().then(r => {\n          if (r.code === 0) {\n            content = this.$t('The backup was successfully restored, it is advised to reboot the system now in order to apply all configuration changes.');\n            this.$confirm(content, title, {\n              confirmButtonText: this.$t('Reboot now')\n            }).then(() => {\n              this.$system.reboot().then(() => {\n                this.$reconnect(this.$t('Rebooting...'));\n              });\n            });\n          } else {\n            content = this.$t('Backup restoration failed, Make sure that you choose the file format for your platform.');\n            this.$confirm(content, title, {\n              showCancelButton: false,\n              confirmButtonText: this.$t('Close')\n            }).then(() => {\n              this.cleanBackup();\n            });\n          }\n        });\n      });\n    },\n    onUploadFirmwareSuccess(info) {\n      this.testUpgrade().then(res => {\n        if (res.code === 0) {\n          let title = this.$t('Verify firmware');\n          let content = '<p>' + this.$t('The firmware image was uploaded completely', {btn: this.$t('OK')}) + '</p>'\n          content += '<ul>';\n          content += `<li><strong>${this.$t('Checksum')}: </strong>${info.checksum}</li>`;\n\n          const size = (info.size / 1024 / 1024).toFixed(2);\n          content += `<li><strong>${this.$t('Size')}: </strong>${size} MB</li>`;\n          content += '</ul>';\n          content += `<input id=\"upgrade-firmware-keep\" type=\"checkbox\" checked> ${this.$t('Keep configuration when reflashing')}`;\n\n          this.$confirm(content, title, {\n            showClose: false,\n            closeOnClickModal: false,\n            dangerouslyUseHTMLString: true\n          }).then(() => {\n            const keep = document.getElementById('upgrade-firmware-keep').checked;\n            this.startUpgrade(keep).then(() => {\n              this.$reconnect(this.$t('Upgrading...'));\n            });\n          }).catch(() => {\n            this.cleanUpgrade();\n          });\n        } else {\n          const content = this.$t('The uploaded image file does not contain a supported format. Make sure that you choose the generic image format for your platform.');\n          this.$confirm(content, this.$t('Invalid image'), {\n            showCancelButton: false,\n            confirmButtonText: this.$t('Close')\n          }).then(() => {\n            this.cleanUpgrade();\n          });\n        }\n      });\n    }\n  },\n  created() {\n    this.sid = this.$session.sid();\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system"}]}