{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\software.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\software.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"D:\\\\Project VMODEV\\\\Horde\\\\oui\\\\oui-master\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\Project VMODEV\\\\Horde\\\\oui\\\\oui-master\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      diskInfo: {\n        used: 0,\n        total: 0\n      },\n      diskSpace: 0,\n      packageName: '',\n      filter: '',\n      packages: [],\n      total: 0,\n      limit: 50,\n      currentPage: 1,\n      displayInstalled: false,\n      installedList: {},\n      loading: true\n    };\n  },\n  computed: {\n    diskUsedPercentage: function diskUsedPercentage() {\n      if (this.diskInfo.used === 0) return 0;\n      return parseInt(this.diskInfo.used / this.diskInfo.total * 100);\n    },\n    diskUsedDetailed: function diskUsedDetailed() {\n      var used = parseInt(this.diskInfo.used / 1024) + ' KB';\n      var total = parseInt(this.diskInfo.total / 1024) + ' KB';\n      return \"\".concat(used, \" / \").concat(total, \" \") + this.$t('used');\n    }\n  },\n  methods: {\n    doFetchPackageList: function doFetchPackageList(cmd, offset, limit, pattern) {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$ubus.call('oui.opkg', cmd, {\n          offset: offset,\n          limit: limit,\n          pattern: pattern\n        }).then(function (r1) {\n          var total = r1.total;\n          var packages = r1.packages;\n          if (typeof offset === 'undefined') offset = 0;\n          if (typeof limit === 'undefined' || limit === 0 || limit > total) limit = total;\n\n          if (packages.length < limit) {\n            var batch = [];\n\n            for (var i = offset + packages.length; i < limit; i += 100) {\n              batch.push(['oui.opkg', cmd, {\n                offset: i,\n                limit: Math.min(i + 100, limit) % 100 || 100,\n                pattern: pattern\n              }]);\n            }\n\n            _this.$ubus.callBatch(batch).then(function (r2) {\n              if (!Array.isArray(r2)) r2 = [r2];\n              r2.forEach(function (item) {\n                var _r1$packages;\n\n                (_r1$packages = r1.packages).push.apply(_r1$packages, _toConsumableArray(item.packages));\n              });\n              resolve(r1);\n            }).catch(function () {\n              reject();\n            });\n          } else {\n            resolve(r1);\n          }\n        }).catch(function () {\n          reject();\n        });\n      });\n    },\n    fetchPackageList: function fetchPackageList(offset) {\n      var _this2 = this;\n\n      var cmd = 'list';\n      var pattern = '';\n      if (this.filter.length > 0) pattern = \"*\".concat(this.filter, \"*\");\n      if (this.displayInstalled) cmd = 'list_installed';\n      this.loading = true;\n      this.packages = [];\n      this.doFetchPackageList(cmd, offset, this.limit, pattern).then(function (r) {\n        _this2.total = r.total;\n        _this2.packages = r.packages.map(function (pkg) {\n          return _objectSpread({}, pkg, {\n            installed: _this2.installedList[pkg.name],\n            new_version: _this2.installedList[pkg.name] ? _this2.installedList[pkg.name].new_version : undefined\n          });\n        });\n        _this2.loading = false;\n      });\n    },\n    doInstallRemovePackage: function doInstallRemovePackage(name, cmd) {\n      return this.$ubus.call('oui.opkg', cmd, {\n        package: name\n      });\n    },\n    showStatus: function showStatus(res, title) {\n      var _this3 = this;\n\n      var msg = '';\n      if (res.stdout) msg += \"<pre style=\\\"background-color: #f5f5f5; color: #333;\\\">\".concat(res.stdout, \"</pre>\");\n      if (res.stderr) msg += \"<pre style=\\\"background-color: #f5f5f5; color: #F56C6C\\\">\".concat(res.stderr, \"</pre>\");\n      if (res.code) msg += this.$t('Package manager failed with status', {\n        code: res.code\n      });else msg += this.$t('Package manager finished successfully.');\n      this.$confirm(msg, title, {\n        dangerouslyUseHTMLString: true,\n        showCancelButton: false,\n        confirmButtonText: this.$t('Close')\n      }).then(function () {\n        if (!res.code) {\n          _this3.loading = true;\n\n          _this3.updateInstalledList().then(function () {\n            _this3.fetchPackageList((_this3.currentPage - 1) * _this3.limit);\n          });\n        }\n      });\n    },\n    installRemovePackage: function installRemovePackage(name, installed, new_version) {\n      var _this4 = this;\n\n      if (name === '') return;\n      var title = installed ? 'Removing package' : 'Installing package';\n      var msg = installed ? 'Really remove package' : 'Really install package';\n      var cmd = installed ? 'remove' : 'install';\n\n      if (new_version) {\n        title = 'Upgrading package';\n        msg = 'Really upgrade package';\n        cmd = 'upgrade';\n        msg = this.$t(msg, {\n          name: name,\n          ver: new_version\n        });\n      } else {\n        msg = this.$t(msg, {\n          name: name\n        });\n      }\n\n      title = this.$t(title, {\n        name: name\n      });\n      this.$confirm(msg, title, {\n        type: 'info'\n      }).then(function () {\n        var loading = _this4.$getLoading(_this4.$t('Waiting for package manager...'));\n\n        _this4.doInstallRemovePackage(name, cmd).then(function (r) {\n          loading.close();\n\n          _this4.showStatus(r, title);\n        });\n      });\n    },\n    doUpdatePackage: function doUpdatePackage() {\n      return this.$ubus.call('oui.opkg', 'update');\n    },\n    updatePackage: function updatePackage() {\n      var _this5 = this;\n\n      var loading = this.$getLoading(this.$t('Waiting for package manager...'));\n      this.doUpdatePackage().then(function (r) {\n        loading.close();\n\n        _this5.showStatus(r, 'Updating package lists');\n      });\n    },\n    updateInstalledList: function updateInstalledList() {\n      var _this6 = this;\n\n      return new Promise(function (resolve) {\n        _this6.doFetchPackageList('list_installed').then(function (r) {\n          _this6.installedList = {};\n          r.packages.forEach(function (pkg) {\n            _this6.installedList[pkg.name] = {};\n          });\n\n          _this6.doFetchPackageList('list_upgradable').then(function (r) {\n            r.packages.forEach(function (pkg) {\n              _this6.installedList[pkg.name].new_version = pkg.new_version;\n            });\n            resolve();\n          }).catch(function () {\n            resolve();\n          });\n        });\n      });\n    }\n  },\n  watch: {\n    displayInstalled: function displayInstalled() {\n      this.fetchPackageList(0);\n    },\n    currentPage: function currentPage() {\n      this.fetchPackageList((this.currentPage - 1) * this.limit);\n    }\n  },\n  created: function created() {\n    var _this7 = this;\n\n    this.$system.getDiskInfo().then(function (info) {\n      _this7.diskInfo.used = info.root.used;\n      _this7.diskInfo.total = info.root.total;\n    });\n    this.updateInstalledList().then(function () {\n      _this7.fetchPackageList(0);\n    });\n  }\n};",{"version":3,"sources":["software.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card style=\" margin-bottom: 10px\">\n      <el-form label-width=\"200px\" style=\"max-width: 600px\">\n        <el-form-item :label=\"$t('Used space')\">\n          <el-progress :text-inside=\"true\" :stroke-width=\"20\" :percentage=\"diskUsedPercentage\"></el-progress>\n          <span>{{ diskUsedDetailed }}</span>\n        </el-form-item>\n        <el-form-item :label=\"$t('Update package lists')\">\n          <el-button type=\"primary\" size=\"small\" @click=\"updatePackage\">{{ $t('Start update...') }}</el-button>\n        </el-form-item>\n        <el-form-item :label=\"$t('Install package directly')\">\n          <el-row>\n            <el-col :span=\"20\"><el-input v-model=\"packageName\" :placeholder=\"$t('Enter URL or name...')\"></el-input></el-col>\n            <el-col :span=\"4\"><el-button type=\"primary\" @click=\"installRemovePackage(packageName, false)\">>></el-button></el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item :label=\"$t('Filter packages')\">\n          <el-input v-model=\"filter\" :placeholder=\"$t('Filter packages...')\" @keyup.enter.native=\"fetchPackageList(0)\"></el-input>\n          <el-checkbox v-model=\"displayInstalled\">{{ $t('Display only installed packages') }}</el-checkbox>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    <el-card>\n      <div slot=\"header\">\n        <el-pagination background layout=\"prev, pager, next\" :page-size=\"limit\" :total=\"total\" :current-page.sync=\"currentPage\"></el-pagination>\n      </div>\n      <el-table :data=\"packages\" v-loading=\"loading\" :element-loading-text=\"$t('Loading...')\"  element-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.8)\">\n        <el-table-column prop=\"name\" :label=\"$t('Software-Package')\" width=\"200\"></el-table-column>\n        <el-table-column prop=\"version\" :label=\"$t('Version')\" width=\"200\" show-overflow-tooltip></el-table-column>\n        <el-table-column prop=\"size\" :label=\"$t('Size') + '(KB)'\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"description\" :label=\"$t('Description')\" show-overflow-tooltip>\n        </el-table-column>\n        <el-table-column label=\"#\" width=\"200\">\n          <template v-slot=\"{ row }\">\n            <div style=\"display: flex;\">\n              <el-button :type=\"row.installed ? 'success' : 'danger'\" size=\"mini\" @click=\"installRemovePackage(row.name, row.installed)\">{{ row.installed ? $t('Installed') : $t('Not installed') }}</el-button>\n              <el-tooltip v-if=\"row.new_version\" placement=\"top\" :content=\"$t('Can be upgrade to', {ver: row.new_version})\">\n                <el-button type=\"primary\" size=\"mini\" @click=\"installRemovePackage(row.name, row.installed, row.new_version)\">{{ $t('Upgradable') }}</el-button>\n              </el-tooltip>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      diskInfo: {\n        used: 0,\n        total: 0\n      },\n      diskSpace: 0,\n      packageName: '',\n      filter: '',\n      packages: [],\n      total: 0,\n      limit: 50,\n      currentPage: 1,\n      displayInstalled: false,\n      installedList: {},\n      loading: true\n    }\n  },\n  computed: {\n    diskUsedPercentage() {\n      if (this.diskInfo.used === 0)\n        return 0;\n      return parseInt(this.diskInfo.used / this.diskInfo.total * 100);\n    },\n    diskUsedDetailed() {\n      const used = parseInt(this.diskInfo.used / 1024) + ' KB';\n      const total = parseInt(this.diskInfo.total / 1024) + ' KB';\n      return `${used} / ${total} ` + this.$t('used');\n    }\n  },\n  methods: {\n    doFetchPackageList(cmd, offset, limit, pattern) {\n      return new Promise((resolve, reject) => {\n        this.$ubus.call('oui.opkg', cmd, {offset, limit, pattern}).then(r1 => {\n          const total = r1.total;\n          const packages = r1.packages;\n\n          if (typeof(offset) === 'undefined')\n            offset = 0;\n\n          if (typeof(limit) === 'undefined' || limit === 0 || limit > total)\n            limit = total;\n\n          if (packages.length < limit) {\n            const batch = [];\n\n            for (let i = offset + packages.length; i < limit; i += 100)\n              batch.push(['oui.opkg', cmd, {\n                offset: i,\n                limit: (Math.min(i + 100, limit) % 100) || 100,\n                pattern\n              }]);\n\n            this.$ubus.callBatch(batch).then(r2 => {\n              if (!Array.isArray(r2))\n                r2 = [r2];\n\n              r2.forEach(item => {\n                r1.packages.push(...item.packages);\n              });\n\n              resolve(r1);\n            }).catch(() => {\n              reject();\n            });\n          } else {\n            resolve(r1);\n          }\n        }).catch(() => {\n          reject();\n        });\n      });\n    },\n    fetchPackageList(offset) {\n      let cmd = 'list';\n      let pattern = '';\n\n      if (this.filter.length > 0)\n        pattern = `*${this.filter}*`;\n\n      if (this.displayInstalled)\n        cmd = 'list_installed'\n\n      this.loading = true;\n      this.packages = [];\n\n      this.doFetchPackageList(cmd, offset, this.limit, pattern).then(r => {\n        this.total = r.total;\n        this.packages = r.packages.map(pkg => {\n          return {\n            ...pkg,\n            installed: this.installedList[pkg.name],\n            new_version: this.installedList[pkg.name] ? this.installedList[pkg.name].new_version : undefined\n          }\n        });\n        this.loading = false;\n      });\n    },\n    doInstallRemovePackage(name, cmd) {\n      return this.$ubus.call('oui.opkg', cmd, {package: name});\n    },\n    showStatus(res, title) {\n      let msg = '';\n\n      if (res.stdout)\n        msg += `<pre style=\"background-color: #f5f5f5; color: #333;\">${res.stdout}</pre>`;\n\n      if (res.stderr)\n        msg += `<pre style=\"background-color: #f5f5f5; color: #F56C6C\">${res.stderr}</pre>`;\n\n      if (res.code)\n        msg += this.$t('Package manager failed with status', {code: res.code});\n      else\n        msg += this.$t('Package manager finished successfully.');\n\n      this.$confirm(msg, title, {\n        dangerouslyUseHTMLString: true,\n        showCancelButton: false,\n        confirmButtonText: this.$t('Close')\n      }).then(() => {\n        if (!res.code) {\n          this.loading = true;\n          this.updateInstalledList().then(() => {\n            this.fetchPackageList((this.currentPage - 1) * this.limit);\n          });\n        }\n      });\n    },\n    installRemovePackage(name, installed, new_version) {\n      if (name === '')\n        return;\n\n      let title = installed ? 'Removing package' : 'Installing package';\n      let msg = installed ? 'Really remove package' : 'Really install package';\n      let cmd = installed ? 'remove' : 'install';\n\n      if (new_version) {\n        title = 'Upgrading package';\n        msg = 'Really upgrade package';\n        cmd = 'upgrade';\n        msg = this.$t(msg, {name: name, ver: new_version})\n      } else {\n        msg = this.$t(msg, {name: name})\n      }\n\n      title = this.$t(title, {name: name})\n\n      this.$confirm(msg, title, {\n        type: 'info'\n      }).then(() => {\n        const loading = this.$getLoading(this.$t('Waiting for package manager...'));\n        this.doInstallRemovePackage(name, cmd).then(r => {\n          loading.close();\n          this.showStatus(r, title);\n        });\n      });\n    },\n    doUpdatePackage() {\n      return this.$ubus.call('oui.opkg', 'update');\n    },\n    updatePackage() {\n      const loading = this.$getLoading(this.$t('Waiting for package manager...'));\n      this.doUpdatePackage().then(r => {\n        loading.close();\n        this.showStatus(r, 'Updating package lists');\n      });\n    },\n    updateInstalledList() {\n      return new Promise(resolve => {\n        this.doFetchPackageList('list_installed').then(r => {\n          this.installedList = {};\n          r.packages.forEach(pkg => {\n            this.installedList[pkg.name] = {};\n          });\n\n          this.doFetchPackageList('list_upgradable').then(r => {\n            r.packages.forEach(pkg => {\n              this.installedList[pkg.name].new_version = pkg.new_version;\n            });\n            resolve();\n          }).catch(() => {\n            resolve();\n          });\n        });\n      });\n    }\n  },\n  watch: {\n    displayInstalled() {\n      this.fetchPackageList(0);\n    },\n    currentPage() {\n      this.fetchPackageList((this.currentPage - 1) * this.limit);\n    }\n  },\n  created() {\n    this.$system.getDiskInfo().then(info => {\n      this.diskInfo.used = info.root.used;\n      this.diskInfo.total = info.root.total;\n    });\n\n    this.updateInstalledList().then(() => {\n      this.fetchPackageList(0);\n    });\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system"}]}