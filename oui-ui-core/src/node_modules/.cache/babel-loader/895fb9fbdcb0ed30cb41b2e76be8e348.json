{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\network\\interfaces\\ifname.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\network\\interfaces\\ifname.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\nexport default {\n  props: {\n    multiple: Boolean\n  },\n  data: function data() {\n    return {\n      devices: []\n    };\n  },\n  computed: {\n    name: function name() {\n      if (this.multiple) return 'ifname_multi';else return 'ifname_single';\n    },\n    depend: function depend() {\n      if (this.multiple) return 'type';else return '!type';\n    }\n  },\n  methods: {\n    load: function load(sid, self) {\n      if (this.multiple) return self.getUciValue(sid);\n      var ifname = this.$uci.get('network', sid, 'ifname') || '';\n      return ifname.split(' ')[0];\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$network.load().then(function () {\n      _this.devices = _this.$network.getDevices().map(function (d) {\n        return d.name;\n      });\n    });\n  }\n};",{"version":3,"sources":["ifname.vue"],"names":[],"mappings":";;;;;;AAKA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AADA,KAAA;AAGA,GARA;AASA,EAAA,QAAA,EAAA;AACA,IAAA,IADA,kBACA;AACA,UAAA,KAAA,QAAA,EACA,OAAA,cAAA,CADA,KAGA,OAAA,eAAA;AACA,KANA;AAOA,IAAA,MAPA,oBAOA;AACA,UAAA,KAAA,QAAA,EACA,OAAA,MAAA,CADA,KAGA,OAAA,OAAA;AACA;AAZA,GATA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,GADA,EACA,IADA,EACA;AACA,UAAA,KAAA,QAAA,EACA,OAAA,IAAA,CAAA,WAAA,CAAA,GAAA,CAAA;AAEA,UAAA,MAAA,GAAA,KAAA,IAAA,CAAA,GAAA,CAAA,SAAA,EAAA,GAAA,EAAA,QAAA,KAAA,EAAA;AACA,aAAA,MAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA;AAPA,GAvBA;AAgCA,EAAA,OAhCA,qBAgCA;AAAA;;AACA,SAAA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA,QAAA,CAAA,UAAA,GAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,IAAA;AAAA,OAAA,CAAA;AACA,KAFA;AAGA;AApCA,CAAA","sourcesContent":["<template>\n  <uci-option-list :label=\"$t('Interface')\" :name=\"name\" uci-option=\"ifname\" :load=\"load\" :options=\"devices\" :depend=\"depend\" :multiple=\"multiple\"></uci-option-list>\n</template>\n\n<script>\nexport default {\n  props: {\n    multiple: Boolean\n  },\n  data() {\n    return {\n      devices: []\n    }\n  },\n  computed: {\n    name() {\n      if (this.multiple)\n        return 'ifname_multi';\n      else\n        return 'ifname_single';\n    },\n    depend() {\n      if (this.multiple)\n        return 'type';\n      else\n        return '!type';\n    }\n  },\n  methods: {\n    load(sid, self) {\n      if (this.multiple)\n        return self.getUciValue(sid);\n\n      const ifname = this.$uci.get('network', sid, 'ifname') || '';\n      return ifname.split(' ')[0];\n    }\n  },\n  created() {\n    this.$network.load().then(() => {\n      this.devices = this.$network.getDevices().map(d => d.name);\n    });\n  }\n}\n</script>\n"],"sourceRoot":"src/views/network/interfaces"}]}