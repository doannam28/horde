{"remainingRequest":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\system\\leds.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\src\\views\\system\\leds.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\horde-oui\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      sysfs: [],\n      triggers: [],\n      devices: [],\n      modes: [['link', this.$t('Link On')], ['tx', this.$t('Transmit')], ['rx', this.$t('Receive')]]\n    };\n  },\n  methods: {\n    listLEDs: function listLEDs() {\n      return this.$ubus.call('oui.system', 'led_list');\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.listLEDs().then(function (r) {\n      if (r.leds.length === 0) return;\n      r.leds.forEach(function (led) {\n        _this.sysfs.push(led.name);\n      });\n      r.leds[0].triggers.forEach(function (trigger) {\n        _this.triggers.push(trigger);\n      });\n    });\n    this.$network.load().then(function () {\n      _this.devices = _this.$network.getDevices().map(function (dev) {\n        return dev.name;\n      }).filter(function (name) {\n        return name !== 'lo';\n      });\n    });\n  }\n};",{"version":3,"sources":["leds.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,KAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,CACA,CAAA,MAAA,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,CADA,EAEA,CAAA,IAAA,EAAA,KAAA,EAAA,CAAA,UAAA,CAAA,CAFA,EAGA,CAAA,IAAA,EAAA,KAAA,EAAA,CAAA,SAAA,CAAA,CAHA;AAJA,KAAA;AAUA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,KAAA,CAAA,IAAA,CAAA,YAAA,EAAA,UAAA,CAAA;AACA;AAHA,GAbA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA;;AACA,SAAA,QAAA,GAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AACA,UAAA,CAAA,CAAA,IAAA,CAAA,MAAA,KAAA,CAAA,EACA;AAEA,MAAA,CAAA,CAAA,IAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA;AACA,OAFA;AAIA,MAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA;AACA,OAFA;AAGA,KAXA;AAaA,SAAA,QAAA,CAAA,IAAA,GAAA,IAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,OAAA,GAAA,KAAA,CAAA,QAAA,CAAA,UAAA,GAAA,GAAA,CAAA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,IAAA;AAAA,OAAA,EAAA,MAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,KAAA,IAAA;AAAA,OAAA,CAAA;AACA,KAFA;AAGA;AAnCA,CAAA","sourcesContent":["<template>\n   <uci-form config=\"system\" v-if=\"sysfs.length > 0\">\n    <uci-section type=\"led\" addable :teasers=\"['name', 'sysfs', 'default', 'trigger']\">\n      <uci-option-input :label=\"$t('Name')\" name=\"name\" required></uci-option-input>\n      <uci-option-list :label=\"$t('Led Name')\" name=\"sysfs\" :options=\"sysfs\" required :initial=\"sysfs[0]\"></uci-option-list>\n      <uci-option-switch :label=\"$t('Default state')\" name=\"default\"></uci-option-switch>\n      <uci-option-list :label=\"$t('Trigger')\" name=\"trigger\" :options=\"triggers\" initial=\"none\" required></uci-option-list>\n      <uci-option-input :label=\"$t('On-State Delay')\" name=\"delayon\" required depend=\"trigger == 'timer'\" :description=\"$t('Time in milliseconds the LED stays on')\"></uci-option-input>\n      <uci-option-input :label=\"$t('Off-State Delay')\" name=\"delayoff\" required depend=\"trigger == 'timer'\" :description=\"$t('Time in milliseconds the LED stays off')\"></uci-option-input>\n      <uci-option-list :label=\"$t('Device')\" name=\"dev\" :options=\"devices\" depend=\"trigger == 'netdev'\" allow-create></uci-option-list>\n      <uci-option-list :label=\"$t('Trigger Mode')\" name=\"mode\" :options=\"modes\" multiple depend=\"trigger == 'netdev'\"></uci-option-list>\n    </uci-section>\n  </uci-form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sysfs: [],\n      triggers: [],\n      devices: [],\n      modes: [\n        ['link', this.$t('Link On')],\n        ['tx', this.$t('Transmit')],\n        ['rx', this.$t('Receive')]\n      ]\n    }\n  },\n  methods: {\n    listLEDs() {\n      return this.$ubus.call('oui.system', 'led_list');\n    }\n  },\n  created() {\n    this.listLEDs().then(r => {\n      if (r.leds.length === 0)\n        return;\n\n      r.leds.forEach(led => {\n        this.sysfs.push(led.name);\n      });\n\n      r.leds[0].triggers.forEach(trigger => {\n        this.triggers.push(trigger);\n      });\n    });\n\n    this.$network.load().then(() => {\n      this.devices = this.$network.getDevices().map(dev => dev.name).filter(name => name !== 'lo');\n    });\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system"}]}