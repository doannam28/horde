{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\system\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\views\\system\\system\\index.vue","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _zoneinfo from \"./zoneinfo\";\nexport default {\n  data: function data() {\n    return {\n      localTime: '',\n      logProtos: [['udp', 'UDP'], ['tcp', 'TCP']],\n      conlogLevels: [['8', this.$t('Debug')], ['7', this.$t('Info')], ['6', this.$t('Notice')], ['5', this.$t('Warning')], ['4', this.$t('Error')], ['3', this.$t('Critical')], ['2', this.$t('Alert')], ['1', this.$t('Emergency')]],\n      cronlogLevels: [['5', this.$t('Debug')], ['8', this.$t('Normal')], ['9', this.$t('Warning')]]\n    };\n  },\n  computed: {\n    zoneinfo: function zoneinfo() {\n      return _zoneinfo.map(function (item) {\n        return item[0];\n      });\n    }\n  },\n  timers: {\n    loadLocalTime: {\n      time: 3000,\n      autostart: true,\n      immediate: true,\n      repeat: true\n    }\n  },\n  methods: {\n    loadLocalTime: function loadLocalTime() {\n      var _this = this;\n\n      this.$system.getSystemInfo().then(function (r) {\n        _this.localTime = new Date(r.localtime * 1000).toString();\n      });\n    },\n    saveTimezone: function saveTimezone(sid, value) {\n      var timezone = 'UTC';\n\n      for (var i = 0; i < _zoneinfo.length; i++) {\n        if (_zoneinfo[i][0] === value) {\n          timezone = _zoneinfo[i][1];\n          break;\n        }\n      }\n\n      this.$uci.set('system', sid, 'zonename', value);\n      this.$uci.set('system', sid, 'timezone', timezone);\n    },\n    ntpCliEnabled: function ntpCliEnabled() {\n      return this.$system.initEnabled('sysntpd');\n    },\n    ntpCliEnableApply: function ntpCliEnableApply(v) {\n      var _this2 = this;\n\n      return new Promise(function (resolve) {\n        if (v) {\n          _this2.$system.initStart('sysntpd').then(function () {\n            _this2.$system.initEnable('sysntpd').then(function () {\n              resolve();\n            });\n          });\n        } else {\n          _this2.$system.initStop('sysntpd').then(function () {\n            _this2.$system.initDisable('sysntpd').then(function () {\n              resolve();\n            });\n          });\n        }\n      });\n    },\n    updateHostname: function updateHostname(value) {\n      this.$store.commit('setHostname', value);\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <uci-form config=\"system\" tabbed>\n    <uci-section :title=\"$t('General Settings')\" type=\"system\">\n        <uci-option-dummy :label=\"$t('Local Time')\" :load=\"localTime\" name=\"__time\"></uci-option-dummy>\n        <uci-option-input type=\"input\" :label=\"$t('Hostname')\" name=\"hostname\" required rules=\"hostname\" @applied=\"updateHostname\"></uci-option-input>\n        <uci-option-list :label=\"$t('Timezone')\" name=\"zonename\" required initial=\"UTC\" :options=\"zoneinfo\" :save=\"saveTimezone\"></uci-option-list>\n    </uci-section>\n    <uci-section :title=\"$t('Logging')\" type=\"system\">\n      <uci-option-input :label=\"$t('System log buffer size')\" name=\"log_size\" placeholder=\"16\" append=\"kiB\" :rules=\"{type: 'uinteger', min: 0, max: 128}\"></uci-option-input>\n      <uci-option-input :label=\"$t('External system log server')\" name=\"log_ip\" placeholder=\"0.0.0.0\" rules=\"ip4addr\"></uci-option-input>\n      <uci-option-input :label=\"$t('External system log server port')\" name=\"log_port\" placeholder=\"514\" rules=\"port\"></uci-option-input>\n      <uci-option-list :label=\"$t('External system log server protocol')\" name=\"log_proto\" initial=\"udp\" :options=\"logProtos\" required></uci-option-list>\n      <uci-option-file :label=\"$t('Write system log to file')\" name=\"log_file\"></uci-option-file>\n      <uci-option-list :label=\"$t('Log output level')\" name=\"conloglevel\" initial=\"7\" :options=\"conlogLevels\" required></uci-option-list>\n      <uci-option-list :label=\"$t('Cron Log Level')\" name=\"cronloglevel\" initial=\"5\" :options=\"cronlogLevels\" required></uci-option-list>\n    </uci-section>\n    <uci-section :title=\"$t('Time Synchronization')\" name=\"ntp\">\n      <uci-option-switch :label=\"$t('Enable NTP client')\" name=\"enable\" save=\"\" :load=\"ntpCliEnabled\" :apply=\"ntpCliEnableApply\"></uci-option-switch>\n      <uci-option-switch :label=\"$t('Provide NTP server')\" name=\"enable_server\" depend=\"enable\"></uci-option-switch>\n      <uci-option-dlist :label=\"$t('NTP server candidates')\" name=\"server\" depend=\"enable\"></uci-option-dlist>\n    </uci-section>\n  </uci-form>\n</template>\n\n<script>\nimport zoneinfo from './zoneinfo'\n\nexport default {\n  data() {\n    return {\n      localTime: '',\n      logProtos: [\n        ['udp', 'UDP'],\n        ['tcp', 'TCP']\n      ],\n      conlogLevels: [\n        ['8', this.$t('Debug')],\n        ['7', this.$t('Info')],\n        ['6', this.$t('Notice')],\n        ['5', this.$t('Warning')],\n        ['4', this.$t('Error')],\n        ['3', this.$t('Critical')],\n        ['2', this.$t('Alert')],\n        ['1', this.$t('Emergency')]\n      ],\n      cronlogLevels: [\n        ['5', this.$t('Debug')],\n        ['8', this.$t('Normal')],\n        ['9', this.$t('Warning')]\n      ]\n    }\n  },\n  computed: {\n    zoneinfo() {\n      return zoneinfo.map(item => item[0]);\n    }\n  },\n  timers: {\n    loadLocalTime: {time: 3000, autostart: true, immediate: true, repeat: true}\n  },\n  methods: {\n    loadLocalTime() {\n      this.$system.getSystemInfo().then(r => {\n        this.localTime = new Date(r.localtime * 1000).toString();\n      });\n    },\n    saveTimezone(sid, value) {\n      let timezone = 'UTC';\n\n      for (let i = 0; i < zoneinfo.length; i++) {\n        if (zoneinfo[i][0] === value) {\n          timezone = zoneinfo[i][1];\n          break;\n        }\n      }\n\n      this.$uci.set('system', sid, 'zonename', value);\n      this.$uci.set('system', sid, 'timezone', timezone);\n    },\n    ntpCliEnabled() {\n      return this.$system.initEnabled('sysntpd');\n    },\n    ntpCliEnableApply(v) {\n      return new Promise(resolve => {\n        if (v) {\n          this.$system.initStart('sysntpd').then(() => {\n            this.$system.initEnable('sysntpd').then(() => {\n              resolve();\n            });\n          });\n        } else {\n          this.$system.initStop('sysntpd').then(() => {\n            this.$system.initDisable('sysntpd').then(() => {\n              resolve();\n            });\n          });\n        }\n      });\n    },\n    updateHostname(value) {\n      this.$store.commit('setHostname', value);\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/system/system"}]}