{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option-list.js","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option-list.js","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\nimport mixin from \"./uci-option\";\nexport default {\n  name: 'UciOptionList',\n  mixins: [mixin],\n  props: {\n    /* If load from uci fails, the value of the property is used as the form value. */\n    initial: [String, Number, Array],\n    options: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    multiple: Boolean,\n    allowCreate: Boolean,\n    exclude: [String, Function]\n  },\n  computed: {\n    fixedOptions: function fixedOptions() {\n      return this.options.map(function (o) {\n        if (!Array.isArray(o)) o = [o];\n        o[0] = o[0] + '';\n        if (o.length === 1) return [o[0], o[0]];\n        return o;\n      });\n    }\n  },\n  methods: {\n    convertFromUCI: function convertFromUCI(value) {\n      if (this.multiple) {\n        if (typeof value === 'string') value = value.replace(/\\s+/g, ' ').split(' ');else if (Array.isArray(value)) value = value.map(function (v) {\n          return v.toString();\n        });else value = [];\n      } else {\n        if (typeof value === 'undefined') value = '';\n        value = value.toString();\n      }\n\n      return value;\n    },\n    convertToUCI: function convertToUCI(value) {\n      if (this.multiple) value = value.join(' ');\n      return value;\n    },\n    view: function view(prop, sid) {\n      var _this = this;\n\n      var h = this.$createElement;\n      var props = {\n        filterable: true,\n        clearable: !this.required,\n        multiple: this.multiple,\n        allowCreate: this.allowCreate\n      };\n      var options = this.fixedOptions;\n      var exclude;\n      if (typeof this.exclude === 'string') exclude = this.exclude;else if (typeof this.exclude === 'function') exclude = this.exclude(sid, this);\n      if (exclude) options = options.filter(function (o) {\n        return o[0] !== exclude;\n      });\n      return h(\"el-select\", _mergeJSXProps([{\n        \"style\": \"width: 100%\"\n      }, {\n        \"props\": props\n      }, {\n        \"model\": {\n          value: _this.form[prop],\n          callback: function callback($$v) {\n            _this.$set(_this.form, prop, $$v);\n          }\n        }\n      }]), [options.map(function (o) {\n        return h(\"el-option\", {\n          \"attrs\": {\n            \"value\": o[0],\n            \"label\": o[1]\n          }\n        });\n      })]);\n    }\n  }\n};",{"version":3,"sources":["D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option-list.js"],"names":["mixin","name","mixins","props","initial","String","Number","Array","options","type","default","multiple","Boolean","allowCreate","exclude","Function","computed","fixedOptions","map","o","isArray","length","methods","convertFromUCI","value","replace","split","v","toString","convertToUCI","join","view","prop","sid","filterable","clearable","required","filter","form"],"mappings":"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","sourcesContent":["import mixin from './uci-option'\n\nexport default {\n  name: 'UciOptionList',\n  mixins: [mixin],\n  props: {\n    /* If load from uci fails, the value of the property is used as the form value. */\n    initial: [String, Number, Array],\n    options: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    multiple: Boolean,\n    allowCreate: Boolean,\n    exclude: [String, Function]\n  },\n  computed: {\n    fixedOptions() {\n      return this.options.map(o => {\n        if (!Array.isArray(o))\n          o = [o];\n        o[0] = o[0] + '';\n        if (o.length === 1)\n          return [o[0], o[0]];\n        return o;\n      });\n    }\n  },\n  methods: {\n    convertFromUCI(value) {\n      if (this.multiple) {\n        if (typeof(value) === 'string')\n          value = value.replace(/\\s+/g, ' ').split(' ');\n        else if (Array.isArray(value))\n          value = value.map(v => v.toString());\n        else\n          value = [];\n      } else {\n        if (typeof(value) === 'undefined')\n          value = '';\n        value = value.toString();\n      }\n      return value;\n    },\n    convertToUCI(value) {\n      if (this.multiple)\n        value = value.join(' ');\n      return value;\n    },\n    view(prop, sid) {\n      const props = {\n        filterable: true,\n        clearable: !this.required,\n        multiple: this.multiple,\n        allowCreate: this.allowCreate\n      }\n\n      let options = this.fixedOptions;\n      let exclude;\n\n      if (typeof(this.exclude) === 'string')\n        exclude = this.exclude;\n      else if (typeof(this.exclude) === 'function')\n        exclude = this.exclude(sid, this);\n\n      if (exclude)\n        options = options.filter(o => o[0] !== exclude);\n\n      return <el-select style=\"width: 100%\" props={props} v-model={this.form[prop]}>{options.map(o => <el-option value={o[0]} label={o[1]} />)}</el-select>;\n    }\n  }\n}\n"]}]}