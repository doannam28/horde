{"remainingRequest":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option.js","dependencies":[{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option.js","mtime":1591674512000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport _toConsumableArray from \"D:\\\\Project VMODEV\\\\Horde\\\\oui\\\\oui-master\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _typeof from \"D:\\\\Project VMODEV\\\\Horde\\\\oui\\\\oui-master\\\\oui-ui-core\\\\src\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.number.constructor\";\nimport validator from \"./validator\";\nexport default {\n  name: 'UciOption',\n  inject: ['uciForm', 'uciSection'],\n  props: {\n    label: String,\n    name: {\n      type: String,\n      required: true\n    },\n    description: String,\n    required: Boolean,\n\n    /* If load from uci fails, the value of the property is used as the form value. */\n    initial: [String, Number],\n\n    /* If this prop is provided, the uci value will be accessed with this prop instead of the name prop. */\n    uciOption: String,\n\n    /*\n    ** If a function provided, the form loads the value by the function instead of from uci.\n    ** If other type provided, the form loads the value from the prop's value.\n    ** Parameters: sid, self\n    ** Return:  Promise object or value\n    */\n    load: [String, Array, Function],\n\n    /*\n    ** If a function provided, it will be called when oui saves the uci configuration.\n    ** If an empty string provided, indicates don't save uci.\n    ** If any other value provided, indicates save uci with the value.\n    ** Parameters: sid, value, self\n    ** Return:  Promise object or undefined\n    */\n    save: [String, Array, Function],\n\n    /*\n    ** If this function is provided, it will be called when oui applys the uci configuration.\n    ** Parameters: value, self\n    ** Return:  Promise object or undefined\n    */\n    apply: Function,\n\n    /* depend=\"(a == 12 || a == 'x') && y == 4 && q != 5 && !z\" */\n    depend: {\n      type: String,\n      default: ''\n    },\n\n    /* validator rules */\n    rules: [String, Object, Function, Array],\n    tab: String,\n\n    /* Used for custom header of table column */\n    header: String,\n\n    /* Used for table section */\n    width: [String, Number],\n    hide: Boolean\n  },\n  data: function data() {\n    return {\n      /* original value */\n      original: {},\n      uid: -1\n    };\n  },\n  computed: {\n    tabName: function tabName() {\n      if (this.tab) return this.tab;\n      var parent = this.$getParent('UciTab');\n      if (parent) return parent.name;\n      return undefined;\n    },\n    config: function config() {\n      return this.uciForm.config;\n    },\n    form: function form() {\n      return this.uciForm.form;\n    },\n    parsedDepend: function parsedDepend() {\n      var compares = ['==', '===', '!=', '!==', '<', '>', '>=', '<='];\n      var expr = this.depend.trim().replace(/\\s+/g, ' ');\n      var states = {\n        name: 0,\n        operand: 1,\n        logic: 2,\n        logicOrCmp: 3\n      };\n      if (expr === '') return undefined;\n      var parts = expr.split(' ');\n      var waitRightBracket = 0;\n      var s = states.name;\n      var names = {};\n\n      for (var i = 0; i < parts.length; i++) {\n        var part = parts[i];\n\n        if (s === states.name) {\n          if (part[0] === '(') {\n            waitRightBracket++;\n            part = part.substr(1);\n          }\n\n          if (part[part.length - 1] === ')') {\n            waitRightBracket--;\n            part = part.substr(0, part.length - 1);\n          }\n\n          if (part[0] === '!') {\n            part = part.substr(1);\n            s = states.logic;\n          } else {\n            s = states.logicOrCmp;\n          }\n\n          if (!/^[A-Za-z_]/.test(part)) return undefined;\n          names[part] = true;\n          if (i === parts.length - 1) return {\n            expr: expr,\n            names: Object.keys(names)\n          };\n          continue;\n        }\n\n        if (s === states.logicOrCmp) {\n          if (i === parts.length - 1) return undefined;\n\n          if (compares.indexOf(part) > -1) {\n            s = states.operand;\n            continue;\n          }\n\n          if (part === '||' || part === '&&') {\n            s = states.name;\n            i++;\n            continue;\n          }\n\n          return undefined;\n        }\n\n        if (s === states.operand) {\n          s = states.logic;\n\n          if (part[part.length - 1] === ')') {\n            waitRightBracket--;\n            part = part.substr(0, part.length - 1);\n          }\n\n          var starts = part[0];\n          var end = part[part.length - 1];\n\n          if (starts === '\\'' && end === '\\'') {\n            part = part.substr(1, part.length - 2);\n            if (typeof part !== 'string') return undefined;\n            continue;\n          }\n\n          if (starts !== '\\'' && end !== '\\'') {\n            if (isNaN(part)) return undefined;\n            continue;\n          }\n\n          return undefined;\n        }\n\n        if (s === states.logic) {\n          if (i === parts.length - 1) return undefined;\n\n          if (part === '||' || part === '&&') {\n            s = states.name;\n            continue;\n          }\n\n          return undefined;\n        }\n\n        return undefined;\n      }\n\n      if (waitRightBracket !== 0) return undefined;\n      return {\n        expr: expr,\n        names: Object.keys(names)\n      };\n    },\n    uciopt: function uciopt() {\n      return this.uciOption || this.name;\n    },\n    parsedRules: function parsedRules() {\n      var rules = this.rules;\n      if (typeof rules === 'string' || typeof rules === 'function') rules = [rules];\n      if (_typeof(rules) === 'object' && !Array.isArray(rules)) rules = [rules];\n      if (typeof rules === 'undefined') rules = [];\n      return rules;\n    },\n    isTableExpand: function isTableExpand() {\n      var parent = this.$getParent('UciTableExpand');\n      if (parent) return true;\n      return false;\n    }\n  },\n  watch: {\n    'uciSection.loaded': function uciSectionLoaded() {\n      this.buildForm();\n    }\n  },\n  methods: {\n    formProp: function formProp(sid) {\n      return \"\".concat(sid, \"_\").concat(this.uid, \"_\").concat(this.name);\n    },\n    formValue: function formValue(sid) {\n      return this.form[this.formProp(sid)];\n    },\n    setFormValue: function setFormValue(sid, val) {\n      this.form[this.formProp(sid)] = val;\n    },\n    textValue: function textValue(sid) {\n      var v = this.formValue(sid);\n\n      if (_typeof(v) === 'object') {\n        if (Array.isArray(v)) v = v.join(', ');else v = JSON.stringify(v);\n      }\n\n      return v;\n    },\n    dependExprValue: function dependExprValue(sid) {\n      var v = this.formValue(sid);\n      return \"'\".concat(v, \"'\");\n    },\n    visible: function visible(sid) {\n      var _this = this;\n\n      var depend = this.parsedDepend;\n      if (!depend) return true;\n      var expr = depend.expr;\n      depend.names.forEach(function (name) {\n        var o = _this.uciSection.children[name];\n        if (!o) return false;\n        var v = o.dependExprValue(sid);\n        expr = expr.replace(new RegExp(name, 'gm'), v);\n      });\n      return eval(expr);\n    },\n    buildFormRule: function buildFormRule() {\n      var _this2 = this;\n\n      var rules = [];\n      if (this.required) rules.push({\n        required: true,\n        message: this.$t('This field is required')\n      });\n      this.parsedRules.forEach(function (rule) {\n        rule = validator.compile(rule, _this2);\n        rules.push.apply(rules, _toConsumableArray(rule));\n      });\n      return rules;\n    },\n    convertFromUCI: function convertFromUCI(value) {\n      if (typeof value === 'undefined') value = '';\n      return value.toString();\n    },\n    getUciValue: function getUciValue(sid) {\n      var value = this.$uci.get(this.config, sid, this.uciopt);\n      if (typeof value === 'undefined') value = this.initial;\n      return this.convertFromUCI(value);\n    },\n    buildFormValue: function buildFormValue(sid, value) {\n      var _this3 = this;\n\n      var prop = this.formProp(sid);\n      if (_typeof(value) === 'object') this.original[sid] = JSON.parse(JSON.stringify(value));else this.original[sid] = value;\n      this.setFormValue(sid, value);\n      this.$watch(\"form.\".concat(prop), function (value) {\n        _this3.$emit('change', value, sid, _this3);\n      });\n      this.$emit('change', value, sid, this);\n    },\n    buildFormSid: function buildFormSid(sid) {\n      var _this4 = this;\n\n      var prop = this.formProp(sid);\n      var rules = this.buildFormRule(sid);\n      var value = this.convertFromUCI();\n      this.uciForm.addProp(prop, {\n        value: value,\n        rules: rules,\n        tab: this.tabName\n      });\n\n      if (typeof this.load === 'function') {\n        var r = this.load(sid, this);\n\n        if (window.oui.isPromise(r)) {\n          r.then(function (value) {\n            _this4.buildFormValue(sid, value);\n          });\n        } else {\n          this.buildFormValue(sid, r);\n        }\n      } else if (typeof this.load !== 'undefined') {\n        this.buildFormValue(sid, this.load);\n        this.$watch('load', function (value) {\n          _this4.setFormValue(sid, value);\n        });\n      } else {\n        var _value = this.getUciValue(sid);\n\n        this.buildFormValue(sid, _value);\n      }\n    },\n    buildForm: function buildForm(sid) {\n      var _this5 = this;\n\n      if (sid) {\n        this.buildFormSid(sid);\n        return;\n      }\n\n      this.uciSection.sids.forEach(function (sid) {\n        _this5.buildFormSid(sid);\n      });\n    },\n    destroyFormSid: function destroyFormSid(sid) {\n      var prop = this.formProp(sid);\n      this.uciForm.delProp(prop);\n    },\n    destroyForm: function destroyForm() {\n      var _this6 = this;\n\n      this.uciSection.sids.forEach(function (sid) {\n        _this6.destroyFormSid(sid);\n      });\n    },\n    convertToUCI: function convertToUCI(value) {\n      return value;\n    },\n    _save: function _save(sid) {\n      if (this.save === '') return;\n      var value = this.formValue(sid);\n      if (typeof this.save !== 'undefined' && typeof this.save !== 'function') value = this.save;\n      if (!this.visible(sid)) value = this.convertFromUCI(this.initial);\n      if (window.oui.isEqual(value, this.original[sid])) return;\n      if (typeof this.save === 'function') return this.save(sid, value, this);\n      this.$uci.set(this.config, sid, this.uciopt, this.convertToUCI(value));\n    },\n    _apply: function _apply(sid) {\n      var value = this.formValue(sid);\n      if (window.oui.isEqual(value, this.original[sid])) return;\n      if (typeof this.apply !== 'undefined') return this.apply(value, this);\n    },\n    applied: function applied(sid) {\n      this.$emit('applied', this.formValue(sid));\n    },\n    view: function view(prop, sid) {\n      if (this.$scopedSlots.default) return this.$scopedSlots.default({\n        sid: sid,\n        prop: prop,\n        value: this.formValue(sid),\n        self: this\n      });\n      return '';\n    }\n  },\n  created: function created() {\n    var _this7 = this;\n\n    this.uid = this.uciForm.getUID();\n    /* Ensure that option with the same name are deleted */\n\n    this.$nextTick(function () {\n      _this7.uciSection.addChild(_this7);\n\n      if (_this7.uciSection.loaded) _this7.buildForm();\n    });\n  },\n  render: function render(h) {\n    return h('div', this.$slots.default);\n  },\n  destroyed: function destroyed() {\n    this.uciSection.delChild(this);\n    this.destroyForm();\n  }\n};",{"version":3,"sources":["D:\\Project VMODEV\\Horde\\oui\\oui-master\\oui-ui-core\\src\\src\\components\\uci-form\\src\\uci-option.js"],"names":["validator","name","inject","props","label","String","type","required","description","Boolean","initial","Number","uciOption","load","Array","Function","save","apply","depend","default","rules","Object","tab","header","width","hide","data","original","uid","computed","tabName","parent","$getParent","undefined","config","uciForm","form","parsedDepend","compares","expr","trim","replace","states","operand","logic","logicOrCmp","parts","split","waitRightBracket","s","names","i","length","part","substr","test","keys","indexOf","starts","end","isNaN","uciopt","parsedRules","isArray","isTableExpand","watch","buildForm","methods","formProp","sid","formValue","setFormValue","val","textValue","v","join","JSON","stringify","dependExprValue","visible","forEach","o","uciSection","children","RegExp","eval","buildFormRule","push","message","$t","rule","compile","convertFromUCI","value","toString","getUciValue","$uci","get","buildFormValue","prop","parse","$watch","$emit","buildFormSid","addProp","r","window","oui","isPromise","then","sids","destroyFormSid","delProp","destroyForm","convertToUCI","_save","isEqual","set","_apply","applied","view","$scopedSlots","self","created","getUID","$nextTick","addChild","loaded","render","h","$slots","destroyed","delChild"],"mappings":"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","sourcesContent":["import validator from './validator'\n\nexport default {\n  name: 'UciOption',\n  inject: ['uciForm', 'uciSection'],\n  props: {\n    label: String,\n    name: {\n      type: String,\n      required: true\n    },\n    description: String,\n    required: Boolean,\n    /* If load from uci fails, the value of the property is used as the form value. */\n    initial: [String, Number],\n    /* If this prop is provided, the uci value will be accessed with this prop instead of the name prop. */\n    uciOption: String,\n    /*\n    ** If a function provided, the form loads the value by the function instead of from uci.\n    ** If other type provided, the form loads the value from the prop's value.\n    ** Parameters: sid, self\n    ** Return:  Promise object or value\n    */\n    load: [String, Array, Function],\n    /*\n    ** If a function provided, it will be called when oui saves the uci configuration.\n    ** If an empty string provided, indicates don't save uci.\n    ** If any other value provided, indicates save uci with the value.\n    ** Parameters: sid, value, self\n    ** Return:  Promise object or undefined\n    */\n    save: [String, Array, Function],\n    /*\n    ** If this function is provided, it will be called when oui applys the uci configuration.\n    ** Parameters: value, self\n    ** Return:  Promise object or undefined\n    */\n    apply: Function,\n    /* depend=\"(a == 12 || a == 'x') && y == 4 && q != 5 && !z\" */\n    depend: {\n      type: String,\n      default: ''\n    },\n    /* validator rules */\n    rules: [String, Object, Function, Array],\n    tab: String,\n    /* Used for custom header of table column */\n    header: String,\n    /* Used for table section */\n    width: [String, Number],\n    hide: Boolean\n  },\n  data() {\n    return {\n      /* original value */\n      original: {},\n      uid: -1\n    }\n  },\n  computed: {\n    tabName() {\n      if (this.tab)\n        return this.tab;\n      let parent = this.$getParent('UciTab');\n      if (parent)\n        return parent.name;\n      return undefined;\n    },\n    config() {\n      return this.uciForm.config;\n    },\n    form() {\n      return this.uciForm.form;\n    },\n    parsedDepend() {\n      const compares = ['==', '===', '!=', '!==', '<', '>', '>=', '<='];\n      const expr = this.depend.trim().replace(/\\s+/g, ' ');\n      const states = {\n        name: 0,\n        operand: 1,\n        logic: 2,\n        logicOrCmp: 3\n      }\n\n      if (expr === '')\n        return undefined;\n\n      const parts = expr.split(' ');\n\n      let waitRightBracket = 0;\n      let s = states.name;\n      const names = {};\n\n      for (let i = 0; i < parts.length; i++) {\n        let part = parts[i];\n\n        if (s === states.name) {\n          if (part[0] === '(') {\n            waitRightBracket++;\n            part = part.substr(1);\n          }\n\n          if (part[part.length - 1] === ')') {\n            waitRightBracket--;\n            part = part.substr(0, part.length - 1);\n          }\n\n          if (part[0] === '!') {\n            part = part.substr(1);\n            s = states.logic;\n          } else {\n            s = states.logicOrCmp;\n          }\n\n          if (!/^[A-Za-z_]/.test(part))\n            return undefined;\n          names[part] = true;\n\n          if (i === parts.length - 1)\n            return {expr, names: Object.keys(names)};\n\n          continue;\n        }\n\n        if (s === states.logicOrCmp) {\n          if (i === parts.length - 1)\n            return undefined;\n\n          if (compares.indexOf(part) > -1) {\n            s = states.operand;\n            continue;\n          }\n\n          if (part === '||' || part === '&&') {\n            s = states.name;\n            i++;\n            continue;\n          }\n\n          return undefined;\n        }\n\n        if (s === states.operand) {\n          s = states.logic;\n\n          if (part[part.length - 1] === ')') {\n            waitRightBracket--;\n            part = part.substr(0, part.length - 1);\n          }\n\n          const starts = part[0];\n          const end = part[part.length - 1];\n\n          if (starts === '\\'' && end === '\\'') {\n            part = part.substr(1, part.length - 2);\n            if (typeof(part) !== 'string')\n              return undefined;\n            continue;\n          }\n\n          if (starts !== '\\'' && end !== '\\'') {\n            if (isNaN(part))\n              return undefined;\n            continue;\n          }\n\n          return undefined;\n        }\n\n        if (s === states.logic) {\n          if (i === parts.length - 1)\n            return undefined;\n\n          if (part === '||' || part === '&&') {\n            s = states.name;\n            continue;\n          }\n\n          return undefined;\n        }\n\n        return undefined;\n      }\n\n      if (waitRightBracket !== 0)\n        return undefined;\n\n      return {expr, names: Object.keys(names)};\n    },\n    uciopt() {\n      return this.uciOption || this.name;\n    },\n    parsedRules() {\n      let rules = this.rules;\n\n      if (typeof(rules) === 'string' || typeof(rules) === 'function')\n        rules = [rules];\n\n      if (typeof(rules) === 'object' && !Array.isArray(rules))\n        rules = [rules];\n\n      if (typeof(rules) === 'undefined')\n        rules = [];\n\n      return rules;\n    },\n    isTableExpand() {\n      let parent = this.$getParent('UciTableExpand');\n      if (parent)\n        return true;\n      return false;\n    }\n  },\n  watch: {\n    'uciSection.loaded'() {\n      this.buildForm();\n    }\n  },\n  methods: {\n    formProp(sid) {\n      return `${sid}_${this.uid}_${this.name}`;\n    },\n    formValue(sid) {\n      return this.form[this.formProp(sid)];\n    },\n    setFormValue(sid, val) {\n      this.form[this.formProp(sid)] = val;\n    },\n    textValue(sid) {\n      let v = this.formValue(sid);\n\n      if (typeof(v) === 'object') {\n        if (Array.isArray(v))\n          v = v.join(', ');\n        else\n          v = JSON.stringify(v);\n      }\n\n      return v;\n    },\n    dependExprValue(sid) {\n      const v = this.formValue(sid);\n      return `'${v}'`;\n    },\n    visible(sid) {\n      const depend = this.parsedDepend;\n      if (!depend)\n        return true;\n\n      let expr = depend.expr;\n\n      depend.names.forEach(name => {\n        const o = this.uciSection.children[name];\n        if (!o)\n          return false;\n        let v = o.dependExprValue(sid);\n        expr = expr.replace(new RegExp(name, 'gm'), v);\n      });\n\n      return eval(expr);\n    },\n    buildFormRule() {\n      const rules = [];\n\n      if (this.required)\n        rules.push({required: true, message: this.$t('This field is required')});\n\n      this.parsedRules.forEach(rule => {\n        rule = validator.compile(rule, this);\n        rules.push(...rule);\n      });\n\n      return rules;\n    },\n    convertFromUCI(value) {\n      if (typeof(value) === 'undefined')\n        value = '';\n      return value.toString();\n    },\n    getUciValue(sid) {\n      let value = this.$uci.get(this.config, sid, this.uciopt);\n      if (typeof(value) === 'undefined')\n        value = this.initial;\n      return this.convertFromUCI(value);\n    },\n    buildFormValue(sid, value) {\n      const prop = this.formProp(sid);\n\n      if (typeof(value) === 'object')\n        this.original[sid] = JSON.parse(JSON.stringify(value));\n      else\n        this.original[sid] = value;\n\n      this.setFormValue(sid, value);\n\n      this.$watch(`form.${prop}`, value => {\n        this.$emit('change', value, sid, this);\n      });\n\n      this.$emit('change', value, sid, this);\n    },\n    buildFormSid(sid) {\n      const prop = this.formProp(sid);\n      const rules = this.buildFormRule(sid);\n      const value = this.convertFromUCI();\n\n      this.uciForm.addProp(prop, {value, rules, tab: this.tabName});\n\n      if (typeof(this.load) === 'function') {\n        const r = this.load(sid, this);\n        if (window.oui.isPromise(r)) {\n          r.then(value => {\n            this.buildFormValue(sid, value);\n          });\n        } else {\n          this.buildFormValue(sid, r);\n        }\n      } else if (typeof(this.load) !== 'undefined') {\n        this.buildFormValue(sid, this.load);\n        this.$watch('load', value => {\n          this.setFormValue(sid, value);\n        });\n      } else {\n        const value = this.getUciValue(sid);\n        this.buildFormValue(sid, value);\n      }\n    },\n    buildForm(sid) {\n      if (sid) {\n        this.buildFormSid(sid);\n        return;\n      }\n\n      this.uciSection.sids.forEach(sid => {\n        this.buildFormSid(sid);\n      });\n    },\n    destroyFormSid(sid) {\n      const prop = this.formProp(sid);\n      this.uciForm.delProp(prop);\n    },\n    destroyForm() {\n      this.uciSection.sids.forEach(sid => {\n        this.destroyFormSid(sid);\n      });\n    },\n    convertToUCI(value) {\n      return value;\n    },\n    _save(sid) {\n      if (this.save === '')\n        return;\n\n      let value = this.formValue(sid);\n      if (typeof(this.save) !== 'undefined' && typeof(this.save) !== 'function')\n        value = this.save;\n\n      if (!this.visible(sid))\n        value = this.convertFromUCI(this.initial);\n\n      if (window.oui.isEqual(value, this.original[sid]))\n        return;\n\n      if (typeof(this.save) === 'function')\n        return this.save(sid, value, this);\n\n      this.$uci.set(this.config, sid, this.uciopt, this.convertToUCI(value));\n    },\n    _apply(sid) {\n      const value = this.formValue(sid);\n\n      if (window.oui.isEqual(value, this.original[sid]))\n        return;\n\n      if (typeof(this.apply) !== 'undefined')\n        return this.apply(value, this);\n    },\n    applied(sid) {\n      this.$emit('applied', this.formValue(sid));\n    },\n    view(prop, sid) {\n      if (this.$scopedSlots.default)\n        return this.$scopedSlots.default({sid, prop, value: this.formValue(sid), self: this});\n      return '';\n    }\n  },\n  created() {\n    this.uid = this.uciForm.getUID();\n    /* Ensure that option with the same name are deleted */\n    this.$nextTick(() => {\n      this.uciSection.addChild(this);\n      if (this.uciSection.loaded)\n        this.buildForm();\n    });\n  },\n  render(h) {\n    return h('div', this.$slots.default);\n  },\n  destroyed() {\n    this.uciSection.delChild(this);\n    this.destroyForm();\n  }\n}\n"]}]}